{"version":3,"sources":["fkpcore/index.js"],"names":["fkp","socketio","require","global","Sio","sio","cache","Cache","_fetch","router","_fkp","ctx","opts","isAjax","header","name","value","undefined","request","set","get","fkpInstanc","Object","entries","property","_name","_value","env","process","NODE_ENV","utileHand","fn","apply","arguments","plugins","prototype","use","app","options","instance","dfts","apis","list","pages","index","mapper","pluginsFolder","server","init","fetch","Fetch","innerData","route","prefix","staticMapper","apilist","statics","bind","routepreset","routerOptions","indexOf","prefixs","push","baseRoot","_utilesFiles","readdirSync","resolve","__dirname","length","utileFile","utileFun","default","parse","pluginRoot","existsSync","_pluginFiles","pluginFile","plugin","join","console","log","next","getRouter","getRoute","run"],"mappings":";;;;;;;;QA6BgBA,G,GAAAA,G;;AA7BhB;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIC,WAAWC,QAAQ,mBAAR,CAAf,CAA6CC,OAAOC,GAAP,GAAaH,SAASI,GAAtB;AAC7C,IAAIC,QAAQJ,QAAQ,iBAAR,CAAZ,CAA6CC,OAAOI,KAAP,GAAeD,KAAf;AAC7C,IAAIE,SAASN,QAAQ,iBAAR,CAAb;AACA,IAAIO,SAASP,QAAQ,UAAR,CAAb;;AAGA;AACA,SAASQ,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACtB,OAAKD,GAAL,GAAWA,GAAX;AACA,OAAKC,IAAL,GAAYA,IAAZ;;AAEA,OAAKC,MAAL,GAAc,YAAW;AACvB,WAAOC,OAAO,kBAAP,MAA+B,gBAAtC;AACD,GAFD;;AAIA,WAASA,MAAT,CAAgBC,IAAhB,EAAsBC,KAAtB,EAA6B;AAC3B,QAAIA,SAASC,SAAb,EAAwB;AACtBN,UAAIO,OAAJ,CAAYC,GAAZ,CAAgBJ,IAAhB,EAAsBC,KAAtB;AACD,KAFD,MAEO;AACL,aAAOL,IAAIO,OAAJ,CAAYE,GAAZ,CAAgBL,IAAhB,CAAP;AACD;AACF;AACF;;AAED;AACO,SAASf,GAAT,CAAaW,GAAb,EAAkBC,IAAlB,EAAuB;AAC5B,MAAIS,aAAa,IAAIX,IAAJ,CAASC,GAAT,EAAcC,IAAd,CAAjB;AAD4B;AAAA;AAAA;;AAAA;AAE5B,yBAAqBU,OAAOC,OAAP,CAAevB,GAAf,CAArB,8HAA0C;AAAA,UAAjCwB,QAAiC;;AAAA,qCAClBA,QADkB;AAAA,UACnCC,KADmC;AAAA,UAC5BC,MAD4B;;AAExCL,iBAAWI,KAAX,IAAoBC,MAApB;AACD;AAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM5B,SAAOL,UAAP;AACD;;AAED;AACArB,IAAI2B,GAAJ,GAAUC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAxB,GAAwC,KAAxC,GAAgD,KAA1D;AACA;AACA;AACA;AACA;;AAEA;AACA7B,IAAI8B,SAAJ,GAAgB,UAASf,IAAT,EAAegB,EAAf,EAAkB;AAChC,MAAI,OAAOA,EAAP,IAAa,UAAjB,EAA6B;AAC3B/B,QAAIe,IAAJ,IAAY,YAAW;AACrB,UAAIgB,MAAM,OAAOA,EAAP,IAAW,UAArB,EAAiC;AAAE,eAAOA,GAAGC,KAAH,CAAS,IAAT,GAAgBhC,GAAhB,oCAAwBiC,SAAxB,GAAP;AAA4C;AAChF,KAFD;AAGD;AACF,CAND;;AAQA;AACAjC,IAAIkC,OAAJ,GAAc,UAASnB,IAAT,EAAegB,EAAf,EAAkB;AAC9B,MAAI,OAAOA,EAAP,IAAa,UAAjB,EAA6B;AAC3BrB,SAAKyB,SAAL,CAAepB,IAAf,IAAuB,YAAW;AAChC,UAAIgB,MAAM,OAAOA,EAAP,IAAW,UAArB,EAAiC;AAAE,eAAOA,GAAGC,KAAH,CAAS,IAAT,GAAgB,KAAKrB,GAArB,oCAA6BsB,SAA7B,GAAP;AAAiD;AACrF,KAFD;AAGD;AACF,CAND;;AAQA;AACAjC,IAAIoC,GAAJ,GAAU,UAASrB,IAAT,EAAegB,EAAf,EAAkB;AAC1BrB,OAAKyB,SAAL,CAAepB,IAAf,IAAuB,YAAW;AAChC,QAAIgB,MAAM,OAAOA,EAAP,IAAW,UAArB,EAAiC,OAAOA,GAAGC,KAAH,CAAS,IAAT,GAAgB,KAAKrB,GAArB,oCAA6BsB,SAA7B,GAAP;AAClC,GAFD;AAGD,CAJD;;;uDAMe,kBAAeI,GAAf,EAAoBC,OAApB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,oBADO,GACI,IADJ;AAETC,gBAFS,GAEF;AACTC,oBAAMH,QAAQG,IAAR,IAAc,EAACC,MAAM,EAAP,EADX;AAETC,qBAAOL,QAAQK,KAFN;AAGTC,qBAAON,QAAQM,KAAR,IAAe,OAHb;AAITC,sBAAQP,QAAQO,MAJP;AAKTC,6BAAeR,QAAQQ;;AAGzB;AARW,aAFE;AAWbrC,mBAAOkC,KAAP,CAAaH,KAAKG,KAAlB;;AAEA;AACII,kBAdS,GAcA9C,SAAS+C,IAAT,CAAcX,GAAd,CAdA;;AAgBb;;AACMY,iBAjBO,GAiBCzC,OAAO,EAACiC,MAAMD,KAAKC,IAAZ,EAAP,CAjBD;;AAkBbtC,mBAAO+C,KAAP,GAAeD,KAAf;;AAEA;AACIE,qBArBS,GAqBG;AACdC,qBAAO;AACLC,wBAAQ;AADH;;AAKT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAnCgB,aArBH;AAyDbrD,gBAAIsD,YAAJ,GAAmBd,KAAKK,MAAxB;AACA7C,gBAAIS,MAAJ,GAAaA,MAAb;AACAT,gBAAIuD,OAAJ,GAAcf,KAAKC,IAAnB;AACAzC,gBAAI4C,KAAJ,GAAYJ,KAAKI,KAAjB;AACA5C,gBAAIwD,OAAJ,GAAcjB,SAASiB,OAAT,CAAiBC,IAAjB,CAAsBlB,QAAtB,CAAd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;AAKAvC,gBAAI0D,WAAJ;AAAA,oEAAkB,iBAAeL,MAAf,EAAuBM,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACXN,MADW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,8BAEZA,OAAOO,OAAP,CAAe,GAAf,KAAqB,CAAC,CAFV;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGZC,+BAHY,GAGFV,UAAUC,KAAV,CAAgBC,MAHd;;AAAA,8BAIZQ,QAAQD,OAAR,CAAgBP,MAAhB,IAAwB,CAAC,CAJb;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKhBQ,gCAAQC,IAAR,CAAaT,MAAb;AALgB;AAAA,+BAMV5C,OAAO4B,GAAP,EAAYgB,MAAZ,EAAoBM,aAApB,CANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;;AAAA;AAAA;AAAA;AAAA;;AAUA;;;;;;AAxGa;;AA+GX;AACMI,oBAhHK,GAgHM,QAhHN;AAiHPC,wBAjHO,GAiHQ,aAAGC,WAAH,CAAe,eAAKC,OAAL,CAAaC,SAAb,EAAwBJ,QAAxB,CAAf,CAjHR;;AAAA,kBAkHPC,gBAAgBA,aAAaI,MAlHtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAmHT,8BAAsBJ,YAAtB,2HAAoC;AAA3BK,uBAA2B;;AAClC,kBAAIA,UAAUT,OAAV,CAAkB,GAAlB,KAAwB,CAA5B,EAA+B;AACzBU,wBADyB,GACdpE,QAAS,YAAUmE,SAAnB,EAA+BE,OAA/B,EADc;;AAE7BvE,oBAAI8B,SAAJ,CAAc,eAAK0C,KAAL,CAAWH,SAAX,EAAsBtD,IAApC,EAA0CuD,QAA1C;AACD;AACF;AAxHQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AA2HX;AACMG,sBA5HK,GA4HQjC,KAAKM,aA5Hb;AA6HX;;AA7HW,kBA8HN2B,cAAc,aAAGC,UAAH,CAAcD,UAAd,CA9HR;AAAA;AAAA;AAAA;;AA+HLE,wBA/HK,GA+HU,aAAGV,WAAH,CAAeQ,UAAf,CA/HV;;AAAA,kBAgILE,gBAAgBA,aAAaP,MAhIxB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAiIP,8BAAuBO,YAAvB,2HAAqC;AAA5BC,wBAA4B;;AACnC,kBAAIA,WAAWhB,OAAX,CAAmB,GAAnB,KAAyB,CAA7B,EAAgC;AAC1BiB,sBAD0B,GACjB3E,QAAS,eAAK4E,IAAL,CAAUL,UAAV,EAAsBG,UAAtB,CAAT,EAA6CL,OAA7C,CAAqDvE,GAArD,CADiB;;AAE9BA,oBAAIkC,OAAJ,CAAY,eAAKsC,KAAL,CAAWI,UAAX,EAAuB7D,IAAnC,EAAyC8D,MAAzC;AACD;AACF;AAtIM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA0IXE,oBAAQC,GAAR;;AA1IW;;AA6Ib;AACA3C,gBAAIrC,GAAJ,GAAUA,GAAV;;AAEA;AACAqC,gBAAID,GAAJ;AAAA,oEAAQ,kBAAOzB,GAAP,EAAYsE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGAxE,OAAO4B,GAAP,CAHA;;AAAA;;AAKN;AACArC,4BAAIkF,SAAJ,GAAgB,YAAU;AACxB,iCAAOzE,OAAO0E,QAAP,CAAgBxE,GAAhB,CAAP;AACD,yBAFD;;AAIA;AACAA,4BAAIX,GAAJ,GAAUA,IAAIW,GAAJ,CAAV;;AAEA;AACAuC,8BAAMF,IAAN,CAAWrC,GAAX;;AAdM;AAAA,+BAgBAsE,MAhBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAR;;AAAA;AAAA;AAAA;AAAA;;AAoBA;AACAhF,qBAASmF,GAAT;AAtKa,8CAuKNrC,MAvKM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"../../fkpcore/index.js","sourcesContent":["import fs from 'fs'\nimport Path from 'path'\nimport request from 'request'\n\nlet socketio = require('./modules/wsocket'); global.Sio = socketio.sio\nlet cache = require('./modules/cache');      global.Cache = cache\nlet _fetch = require('./modules/fetch');\nlet router = require('./router')\n\n\n// 实例, fkp中间件\nfunction _fkp(ctx, opts){\n  this.ctx = ctx\n  this.opts = opts\n\n  this.isAjax = function() {\n    return header('X-Requested-With') === 'XMLHttpRequest';\n  }\n\n  function header(name, value) {\n    if (value != undefined) {\n      ctx.request.set(name, value);\n    } else {\n      return ctx.request.get(name);\n    }\n  }\n}\n\n// 静态, fkp()返回实例\nexport function fkp(ctx, opts){\n  let fkpInstanc = new _fkp(ctx, opts)\n  for (let property of Object.entries(fkp)) {\n    let [_name, _value] = property\n    fkpInstanc[_name] = _value\n  }\n  return fkpInstanc\n}\n\n// manual set static property or fun or some resource\nfkp.env = process.env.NODE_ENV == 'development' ? 'dev' : 'pro'\n// fkp.staticMapper = dfts.mapper\n// fkp.router = router\n// fkp.apilist = dfts.apis\n// fkp.index = dfts.index\n\n// Register utile function\nfkp.utileHand = function(name, fn){\n  if (typeof fn == 'function') {\n    fkp[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(null, [fkp, ...arguments]) }\n    }\n  }\n}\n\n// Register plugins function\nfkp.plugins = function(name, fn){\n  if (typeof fn == 'function') {\n    _fkp.prototype[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(this, [this.ctx, ...arguments]) }\n    }\n  }\n}\n\n// as plugins, it look nice\nfkp.use = function(name, fn){\n  _fkp.prototype[name] = function() {\n    if (fn && typeof fn=='function') return fn.apply(this, [this.ctx, ...arguments])\n  }\n}\n\nexport default async function(app, options) {\n  const instance = this\n  let dfts = {\n    apis: options.apis||{list: {}},\n    pages: options.pages,      \n    index: options.index||'index',\n    mapper: options.mapper,\n    pluginsFolder: options.pluginsFolder\n  }\n\n  // 初始化controls目录\n  router.pages(dfts.pages) \n\n  // 初始化socket.io\n  let server = socketio.init(app)  \n\n  // 传入apis\n  const fetch = _fetch({apis: dfts.apis});     \n  global.Fetch = fetch\n\n  // 内部变量\n  let innerData = {\n    route: {\n      prefix: []\n    }\n  }\n\n  // // 实例, fkp中间件\n  // function _fkp(ctx, opts){\n  //   this.ctx = ctx\n  //   this.opts = opts\n\n  //   this.isAjax = function() {\n  //     return header('X-Requested-With') === 'XMLHttpRequest';\n  //   }\n\n  //   function header(name, value) {\n  //     if (value != undefined) {\n  //       ctx.request.set(name, value);\n  //     } else {\n  //       return ctx.request.get(name);\n  //     }\n  //   }\n  // }\n\n  // // 静态, fkp()返回实例\n  // function fkp(ctx, opts){\n  //   let fkpInstanc = new _fkp(ctx, opts)\n  //   for (let property of Object.entries(fkp)) {\n  //     let [_name, _value] = property\n  //     fkpInstanc[_name] = _value\n  //   }\n  //   return fkpInstanc\n  // }\n\n  // // manual set static property or fun or some resource\n  // fkp.env = process.env.NODE_ENV == 'development' ? 'dev' : 'pro'\n  fkp.staticMapper = dfts.mapper\n  fkp.router = router\n  fkp.apilist = dfts.apis\n  fkp.index = dfts.index\n  fkp.statics = instance.statics.bind(instance)\n\n  // // Register utile function\n  // fkp.utileHand = function(name, fn){\n  //   if (typeof fn == 'function') {\n  //     fkp[name] = function() {\n  //       if (fn && typeof fn=='function') { return fn.apply(null, [fkp, ...arguments]) }\n  //     }\n  //   }\n  // }\n\n  // // Register plugins function\n  // fkp.plugins = function(name, fn){\n  //   if (typeof fn == 'function') {\n  //     _fkp.prototype[name] = function() {\n  //       if (fn && typeof fn=='function') { return fn.apply(this, [this.ctx, ...arguments]) }\n  //     }\n  //   }\n  // }\n\n  // // as plugins, it look nice\n  // fkp.use = function(name, fn){\n  //   _fkp.prototype[name] = function() {\n  //     if (fn && typeof fn=='function') return fn.apply(this, [this.ctx, ...arguments])\n  //   }\n  // }\n\n\n  /**\n   * 预动态设置路由, 在plugins方法中使用\n   * @param  {String}  prefix        koa-router's prefix\n   * @param  {JSON}  routerOptions   koa-router's route\n  */\n  fkp.routepreset = async function(prefix, routerOptions) {\n    if (!prefix) return\n    if (prefix.indexOf('/')==-1) return\n    let prefixs = innerData.route.prefix\n    if (prefixs.indexOf(prefix)>-1) return\n    prefixs.push(prefix)\n    await router(app, prefix, routerOptions)\n  }\n\n\n  /*\n  =============== 注册助手方法及plugins =============\n  1、助手方法为一般的静态方法，第一个参数fkp，通过fkp.xxx调用，助手方法不能调用plugins方法\n  2、插件方法为new fkp后的对象方法，带有this的上下文，第一个参数ctx，为koa环境对象，插件方法挂载在fkp上，调用方法同样为fkp.xxx\n  =================================================*/\n\n  try {\n    // register utile\n    const baseRoot = './base'\n    let _utilesFiles = fs.readdirSync(Path.resolve(__dirname, baseRoot))\n    if (_utilesFiles && _utilesFiles.length) {\n      for (let utileFile of _utilesFiles) {\n        if (utileFile.indexOf('_')!=0) {\n          let utileFun = require( './base/'+utileFile ).default()\n          fkp.utileHand(Path.parse(utileFile).name, utileFun)\n        }\n      }\n    }\n\n    // register plugins\n    const pluginRoot = dfts.pluginsFolder\n    // if ( fs.existsSync(Path.resolve(__dirname, pluginRoot)) ) {\n    if ( pluginRoot && fs.existsSync(pluginRoot) ) {\n      let _pluginFiles = fs.readdirSync(pluginRoot)\n      if (_pluginFiles && _pluginFiles.length) {\n        for (let pluginFile of _pluginFiles) {\n          if (pluginFile.indexOf('_')!=0) {\n            let plugin = require( Path.join(pluginRoot, pluginFile) ).default(fkp)\n            fkp.plugins(Path.parse(pluginFile).name, plugin)\n          }\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  // =========== 注册fkp中间件 =============\n  app.fkp = fkp\n\n  // 封装koa中间件\n  app.use(async (ctx, next) => {\n\n    // 初始化路由\n    await router(app)\n\n    // 获取当前的路由信息\n    fkp.getRouter = function(){\n      return router.getRoute(ctx)\n    }\n\n    // controle层使用的fkp都是实例化的fkp\n    ctx.fkp = fkp(ctx)\n\n    // 定义Fetch的上下文环境\n    Fetch.init(ctx)\n\n    await next()\n  })\n\n\n  // socketio运行时\n  socketio.run()\n  return server\n}\n"]}