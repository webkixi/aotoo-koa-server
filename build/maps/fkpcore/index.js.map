{"version":3,"sources":["fkpcore/index.js"],"names":["fkp","socketio","require","global","Sio","sio","cache","Cache","_fetch","router","_fkp","ctx","opts","isAjax","header","name","value","undefined","request","set","get","fkpInstanc","property","_name","_value","env","process","NODE_ENV","utileHand","fn","apply","arguments","plugins","prototype","use","valideFile","_file","firstChar","charAt","invalideChars","indexOf","app","options","instance","dfts","apis","pages","index","mapper","pluginsFolder","server","init","fetch","Fetch","innerData","route","prefix","staticMapper","apilist","statics","bind","routepreset","routerOptions","prefixs","push","baseRoot","_utilesFiles","readdirSync","resolve","__dirname","length","utileFile","utileFun","default","parse","pluginRoot","existsSync","_pluginFiles","pluginFile","plugin","join","console","log","next","getRouter","getRoute","run"],"mappings":"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","file":"../../fkpcore/index.js","sourcesContent":["import fs from 'fs'\nimport Path from 'path'\nimport request from 'request'\n\nlet socketio = require('./modules/wsocket'); global.Sio = socketio.sio\nlet cache = require('./modules/cache');      global.Cache = cache\nlet _fetch = require('./modules/fetch');\nlet router = require('./router')\n\n\n// 实例, fkp中间件\nfunction _fkp(ctx, opts){\n  this.ctx = ctx\n  this.opts = opts\n\n  this.isAjax = function() {\n    return header('X-Requested-With') === 'XMLHttpRequest';\n  }\n\n  function header(name, value) {\n    if (value != undefined) {\n      ctx.request.set(name, value);\n    } else {\n      return ctx.request.get(name);\n    }\n  }\n}\n\n// 静态, fkp()返回实例\nexport function fkp(ctx, opts){\n  let fkpInstanc = new _fkp(ctx, opts)\n  for (const property of Object.entries(fkp)) {\n    const [_name, _value] = property\n    fkpInstanc[_name] = _value\n  }\n  return fkpInstanc\n}\n\n// manual set static property or fun or some resource\nfkp.env = process.env.NODE_ENV == 'development' ? 'dev' : 'pro'\n\n// Register utile function\nfkp.utileHand = function(name, fn){\n  if (typeof fn == 'function') {\n    fkp[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(null, [fkp, ...arguments]) }\n    }\n  }\n}\n\n// Register plugins function\nfkp.plugins = function(name, fn){\n  if (typeof fn == 'function') {\n    _fkp.prototype[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(this, [this.ctx, ...arguments]) }\n    }\n  }\n}\n\n// as plugins, it look nice\nfkp.use = function(name, fn){\n  _fkp.prototype[name] = function() {\n    if (fn && typeof fn=='function') return fn.apply(this, [this.ctx, ...arguments])\n  }\n}\n\nfunction valideFile(_file){\n  const firstChar = _file && _file.charAt(0)\n  const invalideChars = ['_', '.']\n  if (invalideChars.indexOf(firstChar)>-1) return false\n  return true\n}\n\nexport default async function(app, options) {\n  const instance = this\n  let dfts = {\n    apis: options.apis,\n    pages: options.pages,      \n    index: options.index,\n    mapper: options.mapper,\n    pluginsFolder: options.pluginsFolder\n  }\n\n  // 初始化controls目录\n  router.pages(dfts.pages) \n\n  // 初始化socket.io\n  let server = socketio.init(app)  \n\n  // 传入apis\n  const fetch = _fetch({apis: dfts.apis});     \n  global.Fetch = fetch\n\n  // 内部变量\n  let innerData = {\n    route: {\n      prefix: []\n    }\n  }\n\n  fkp.staticMapper = dfts.mapper\n  fkp.router = router\n  fkp.apilist = dfts.apis\n  fkp.index = dfts.index\n  fkp.statics = instance.statics.bind(instance)\n\n\n  /**\n   * 预动态设置路由, 在plugins方法中使用\n   * @param  {String}  prefix        koa-router's prefix\n   * @param  {JSON}  routerOptions   koa-router's route\n  */\n  fkp.routepreset = async function(prefix, routerOptions) {\n    if (!prefix) return\n    if (prefix.indexOf('/')==-1) return\n    let prefixs = innerData.route.prefix\n    if (prefixs.indexOf(prefix)>-1) return\n    prefixs.push(prefix)\n    await router(app, prefix, routerOptions)\n  }\n\n\n  /*\n  =============== 注册助手方法及plugins =============\n  1、助手方法为一般的静态方法，第一个参数fkp，通过fkp.xxx调用，助手方法不能调用plugins方法\n  2、插件方法为new fkp后的对象方法，带有this的上下文，第一个参数ctx，为koa环境对象，插件方法挂载在fkp上，调用方法同样为fkp.xxx\n  =================================================*/\n\n  try {\n    // register utile\n    const baseRoot = './base'\n    let _utilesFiles = fs.readdirSync(Path.resolve(__dirname, baseRoot))\n    if (_utilesFiles && _utilesFiles.length) {\n      for (let utileFile of _utilesFiles) {\n        // if (utileFile.indexOf('_')!=0) {\n        if (valideFile(utileFile)) {\n          let utileFun = require( './base/'+utileFile ).default()\n          fkp.utileHand(Path.parse(utileFile).name, utileFun)\n        }\n      }\n    }\n\n    // register plugins\n    const pluginRoot = dfts.pluginsFolder\n    // if ( fs.existsSync(Path.resolve(__dirname, pluginRoot)) ) {\n    if ( pluginRoot && fs.existsSync(pluginRoot) ) {\n      let _pluginFiles = fs.readdirSync(pluginRoot)\n      if (_pluginFiles && _pluginFiles.length) {\n        for (let pluginFile of _pluginFiles) {\n          // if (pluginFile.indexOf('_')!=0) {\n          if (valideFile(pluginFile)) {\n            let plugin = require( Path.join(pluginRoot, pluginFile) ).default(fkp)\n            fkp.plugins(Path.parse(pluginFile).name, plugin)\n          }\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  // =========== 注册fkp中间件 =============\n  app.fkp = fkp\n\n  // 封装koa中间件\n  app.use(async (ctx, next) => {\n\n    // 初始化路由\n    await router(app)\n\n    // 获取当前的路由信息\n    fkp.getRouter = function(){\n      return router.getRoute(ctx)\n    }\n\n    // controle层使用的fkp都是实例化的fkp\n    ctx.fkp = fkp(ctx)\n\n    // 定义Fetch的上下文环境\n    Fetch.init(ctx)\n\n    await next()\n  })\n\n\n  // socketio运行时\n  socketio.run()\n  return server\n}\n"]}