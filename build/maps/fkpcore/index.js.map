{"version":3,"sources":["fkpcore/index.js"],"names":["socketio","require","global","Sio","sio","cache","Cache","_fetch","router","app","options","_fkp","fkp","ctx","opts","fkpInstanc","Object","entries","property","_name","_value","isAjax","header","name","value","undefined","request","set","get","dfts","apis","list","pages","index","mapper","pluginsFolder","server","init","fetch","Fetch","innerData","route","prefix","env","process","NODE_ENV","staticMapper","apilist","utileHand","fn","apply","arguments","plugins","prototype","use","routepreset","routerOptions","indexOf","prefixs","push","baseRoot","_utilesFiles","readdirSync","resolve","__dirname","length","utileFile","utileFun","default","parse","pluginRoot","existsSync","_pluginFiles","pluginFile","plugin","join","console","log","next","getRouter","getRoute","run"],"mappings":"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","file":"../../fkpcore/index.js","sourcesContent":["import fs from 'fs'\nimport Path from 'path'\nimport request from 'request'\n\nlet socketio = require('./modules/wsocket'); global.Sio = socketio.sio\nlet cache = require('./modules/cache');      global.Cache = cache\nlet _fetch = require('./modules/fetch');\nlet router = require('./router')\n\nexport default async function(app, options) {\n  let dfts = {\n    apis: options.apis||{list: {}},\n    pages: options.pages,      \n    index: options.index||'index',\n    mapper: options.mapper,\n    pluginsFolder: options.pluginsFolder\n  }\n\n  // 初始化controls目录\n  router.pages(dfts.pages) \n\n  // 初始化socket.io\n  let server = socketio.init(app)  \n\n  // 传入apis\n  const fetch = _fetch({apis: dfts.apis});     \n  global.Fetch = fetch\n\n  // 内部变量\n  let innerData = {\n    route: {\n      prefix: []\n    }\n  }\n\n  // 实例, fkp中间件\n  function _fkp(ctx, opts){\n    this.ctx = ctx\n    this.opts = opts\n\n    this.isAjax = function() {\n      return header('X-Requested-With') === 'XMLHttpRequest';\n    }\n\n    function header(name, value) {\n      if (value != undefined) {\n        ctx.request.set(name, value);\n      } else {\n        return ctx.request.get(name);\n      }\n    }\n  }\n\n  // 静态, fkp()返回实例\n  function fkp(ctx, opts){\n    let fkpInstanc = new _fkp(ctx, opts)\n    for (let property of Object.entries(fkp)) {\n      let [_name, _value] = property\n      fkpInstanc[_name] = _value\n    }\n    return fkpInstanc\n  }\n\n  // manual set static property or fun or some resource\n  fkp.env = process.env.NODE_ENV == 'development' ? 'dev' : 'pro'\n  fkp.staticMapper = dfts.mapper\n  fkp.router = router\n  fkp.apilist = dfts.apis\n  fkp.index = dfts.index\n\n  // Register utile function\n  fkp.utileHand = function(name, fn){\n    if (typeof fn == 'function') {\n      fkp[name] = function() {\n        if (fn && typeof fn=='function') { return fn.apply(null, [fkp, ...arguments]) }\n      }\n    }\n  }\n\n  // Register plugins function\n  fkp.plugins = function(name, fn){\n    if (typeof fn == 'function') {\n      _fkp.prototype[name] = function() {\n        if (fn && typeof fn=='function') { return fn.apply(this, [this.ctx, ...arguments]) }\n      }\n    }\n  }\n\n  // as plugins, it look nice\n  fkp.use = function(name, fn){\n    _fkp.prototype[name] = function() {\n      if (fn && typeof fn=='function') return fn.apply(this, [this.ctx, ...arguments])\n    }\n  }\n\n\n  /**\n   * 预动态设置路由, 在plugins方法中使用\n   * @param  {String}  prefix        koa-router's prefix\n   * @param  {JSON}  routerOptions   koa-router's route\n  */\n  fkp.routepreset = async function(prefix, routerOptions) {\n    if (!prefix) return\n    if (prefix.indexOf('/')==-1) return\n    let prefixs = innerData.route.prefix\n    if (prefixs.indexOf(prefix)>-1) return\n    prefixs.push(prefix)\n    await router(app, prefix, routerOptions)\n  }\n\n\n  /*\n  =============== 注册助手方法及plugins =============\n  1、助手方法为一般的静态方法，第一个参数fkp，通过fkp.xxx调用，助手方法不能调用plugins方法\n  2、插件方法为new fkp后的对象方法，带有this的上下文，第一个参数ctx，为koa环境对象，插件方法挂载在fkp上，调用方法同样为fkp.xxx\n  =================================================*/\n\n  try {\n    // register utile\n    const baseRoot = './base'\n    let _utilesFiles = fs.readdirSync(Path.resolve(__dirname, baseRoot))\n    if (_utilesFiles && _utilesFiles.length) {\n      for (let utileFile of _utilesFiles) {\n        if (utileFile.indexOf('_')!=0) {\n          let utileFun = require( './base/'+utileFile ).default()\n          fkp.utileHand(Path.parse(utileFile).name, utileFun)\n        }\n      }\n    }\n\n    // register plugins\n    const pluginRoot = dfts.pluginsFolder\n    // if ( fs.existsSync(Path.resolve(__dirname, pluginRoot)) ) {\n    if ( pluginRoot && fs.existsSync(pluginRoot) ) {\n      let _pluginFiles = fs.readdirSync(pluginRoot)\n      if (_pluginFiles && _pluginFiles.length) {\n        for (let pluginFile of _pluginFiles) {\n          if (pluginFile.indexOf('_')!=0) {\n            let plugin = require( Path.join(pluginRoot, pluginFile) ).default(fkp)\n            fkp.plugins(Path.parse(pluginFile).name, plugin)\n          }\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  // =========== 注册fkp中间件 =============\n  app.fkp = fkp\n\n  // 封装koa中间件\n  app.use(async (ctx, next) => {\n\n    // 初始化路由\n    await router(app)\n\n    // 获取当前的路由信息\n    fkp.getRouter = function(){\n      return router.getRoute(ctx)\n    }\n\n    // controle层使用的fkp都是实例化的fkp\n    ctx.fkp = fkp(ctx)\n\n    // 定义Fetch的上下文环境\n    Fetch.init(ctx)\n\n    await next()\n  })\n\n\n  // socketio运行时\n  socketio.run()\n  return server\n}\n"]}