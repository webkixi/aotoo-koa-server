{"version":3,"sources":["fkpcore/index.js"],"names":["app","presets","innerData","route","preset_keys","short_prefix","multi_part_prefix","filter","item","split","length","single_part_prefix","sort_prefixs","forEach","prefix","router","_routepreset","fkp","baseRoot","fs","readdirAsync","resolve","__dirname","_utilesFiles","utileFile","valideFile","utileFun","require","default","utileHand","parse","name","registerUtile","pluginRoot","pluginStat","statSync","isDirectory","_pluginFiles","pluginFile","plugin","join","plugins","registerPlugins","socketio","global","Sio","sio","cache","Cache","_fetch","Promise","promisifyAll","IGNORE_CHARS","_fkp","ctx","opts","that","isAjax","header","value","undefined","request","set","get","fkpInstanc","property","_name","_value","env","process","NODE_ENV","fn","apply","arguments","prototype","use","_file","firstChar","charAt","indexOf","options","instance","dfts","apis","pages","index","mapper","pluginsFolder","server","init","fetch","Fetch","staticMapper","apilist","statics","bind","routepreset","routerOptions","existsSync","console","log","getRouter","getRoute","myfkp","next","run"],"mappings":"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","file":"../../fkpcore/index.js","sourcesContent":["import Path from 'path'\nimport request from 'request'\n\nlet fs = require('fs')\nlet socketio = require('./modules/wsocket'); global.Sio = socketio.sio\nlet cache = require('./modules/cache');      global.Cache = cache\nlet _fetch = require('./modules/fetch');\nlet router = require('./router')\nconst Promise = require('bluebird')\nfs = Promise.promisifyAll(fs)\n\n// 内部变量\nlet innerData = {\n  route: {\n    prefix: [],\n    presets: {}\n  }\n}\n\nconst IGNORE_CHARS = ['_', '.']\n\n// 实例, fkp中间件\nfunction _fkp(ctx, opts){\n  this.ctx = ctx\n  this.opts = opts\n  const that = this\n  this.isAjax = function() {\n    return header(that.ctx, 'X-Requested-With') === 'XMLHttpRequest';\n  }\n}\n\nfunction header(ctx, name, value) {\n  if (ctx) {\n    if (value != undefined) {\n      ctx.request.set(name, value);\n    } else {\n      return ctx.request.get(name);\n    }\n  }\n}\n\nasync function _routepreset(app) {\n  const presets = innerData.route.presets\n  const preset_keys = Object.keys(presets)\n  const short_prefix = []\n\n  const multi_part_prefix = preset_keys.filter(item => item.split('/').length > 2)\n  const single_part_prefix = preset_keys.filter(item => item.split('/').length <= 2)\n  const sort_prefixs = [...multi_part_prefix, ...single_part_prefix]\n\n  sort_prefixs.forEach(async (prefix) => {\n    // console.log(prefix);\n    await router(app, prefix, presets[prefix])\n  });\n\n  // const presets = innerData.route.presets\n  // const preset_keys = Object.keys(presets)\n  // const short_prefix = []\n\n  // preset_keys.forEach(async (_prefix) => {\n  //   const len = _prefix.split('/').length\n  //   if (len > 2) {\n  //     await router(app, _prefix, presets[_prefix])\n  //   } else {\n  //     short_prefix.push(_prefix)\n  //   }\n  // })\n\n  // short_prefix.forEach(async (_prefix) => {\n  //   await router(app, _prefix, presets[_prefix])\n  // })\n}\n\n// 静态, fkp()返回实例\nexport function fkp(ctx, opts){\n  let fkpInstanc = new _fkp(ctx, opts)\n  for (const property of Object.entries(fkp)) {\n    const [_name, _value] = property\n    fkpInstanc[_name] = _value\n  }\n  return fkpInstanc\n}\n\n// manual set static property or fun or some resource\nfkp.env = process.env.NODE_ENV == 'development' ? 'dev' : 'pro'\n\n// Register utile function\nfkp.utileHand = function(name, fn){\n  if (typeof fn == 'function') {\n    fkp[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(null, [fkp, ...arguments]) }\n    }\n  }\n}\n\n// Register plugins function\nfkp.plugins = function(name, fn){\n  if (typeof fn == 'function') {\n    _fkp.prototype[name] = function() {\n      if (fn && typeof fn=='function') { return fn.apply(this, [this.ctx, ...arguments]) }\n    }\n  }\n}\n\n// as plugins, it look nice\nfkp.use = function(name, fn){\n  _fkp.prototype[name] = function() {\n    if (fn && typeof fn=='function') return fn.apply(this, [this.ctx, ...arguments])\n  }\n}\n\nfunction valideFile(_file) {\n  const firstChar = _file && _file.charAt(0)\n  return IGNORE_CHARS.indexOf(firstChar) > -1 ? false : true\n}\n\nasync function registerUtile(app) {\n  // register utile\n  const fkp = app.fkp\n  const baseRoot = './base'\n  let _utilesFiles = await fs.readdirAsync(Path.resolve(__dirname, baseRoot))\n  if (_utilesFiles && _utilesFiles.length) {\n    for (let utileFile of _utilesFiles) {\n      if (valideFile(utileFile)) {\n        let utileFun = require('./base/' + utileFile).default()\n        fkp.utileHand(Path.parse(utileFile).name, utileFun)\n      }\n    }\n  }\n}\n\nasync function registerPlugins(pluginRoot, app) {\n  const fkp = app.fkp\n  const pluginStat = fs.statSync(pluginRoot)\n  if (pluginStat.isDirectory()) {\n    let _pluginFiles = await fs.readdirAsync(pluginRoot)\n    if (_pluginFiles && _pluginFiles.length) {\n      for (let pluginFile of _pluginFiles) {\n        if (valideFile(pluginFile)) {\n          let plugin = require(Path.join(pluginRoot, pluginFile)).default(fkp)\n          fkp.plugins(Path.parse(pluginFile).name, plugin)\n        }\n      }\n    }\n\n    // let _pluginFiles = fs.readdirSync(pluginRoot)\n    // if (_pluginFiles && _pluginFiles.length) {\n    //   for (let pluginFile of _pluginFiles) {\n    //     if (valideFile(pluginFile)) {\n    //       let plugin = require(Path.join(pluginRoot, pluginFile)).default(fkp)\n    //       fkp.plugins(Path.parse(pluginFile).name, plugin)\n    //     }\n    //   }\n    // }\n  }\n}\n\nexport default async function(app, options) {\n  const instance = this\n  // =========== 注册fkp中间件 =============\n  app.fkp = fkp\n\n  let dfts = {\n    apis: options.apis,\n    pages: options.pages,      \n    index: options.index,\n    mapper: options.mapper,\n    pluginsFolder: options.pluginsFolder\n  }\n\n  // 初始化controls目录\n  router.pages(dfts.pages) \n\n  // 初始化socket.io\n  let server = socketio.init(app)  \n\n  // 传入apis\n  const fetch = _fetch({apis: dfts.apis});     \n  global.Fetch = fetch\n\n  fkp.staticMapper = dfts.mapper\n  fkp.router = router\n  fkp.apilist = dfts.apis\n  fkp.index = dfts.index\n  fkp.statics = instance.statics.bind(instance)\n\n\n  /**\n   * 预动态设置路由, 在plugins方法中使用\n   * @param  {String}  prefix        koa-router's prefix\n   * @param  {JSON}  routerOptions   koa-router's route\n  */\n  fkp.routepreset = async function(prefix, routerOptions) {\n    if (prefix) {\n      prefix = Path.join('/', prefix)\n      innerData.route.presets[prefix] = routerOptions\n      // prefix = Path.join('/', prefix)\n      // let presets = innerData.route.presets\n      // if (!presets[prefix]) {\n      //   presets[prefix] = true\n      //   await router(app, prefix, routerOptions)\n      // }\n    }\n\n    // if (!prefix) return\n    // if (prefix.indexOf('/')==-1) return\n    // let prefixs = innerData.route.prefix\n    // if (prefixs.indexOf(prefix)>-1) return\n    // prefixs.push(prefix)\n    // await router(app, prefix, routerOptions)\n  }\n\n\n  /*\n  =============== 注册助手方法及plugins =============\n  1、助手方法为一般的静态方法，第一个参数fkp，通过fkp.xxx调用，助手方法不能调用plugins方法\n  2、插件方法为new fkp后的对象方法，带有this的上下文，第一个参数ctx，为koa环境对象，插件方法挂载在fkp上，调用方法同样为fkp.xxx\n  =================================================*/\n\n  try {\n    // register utile\n    await registerUtile(app)\n\n    // register plugins\n    const pluginRoot = dfts.pluginsFolder\n    if ( pluginRoot && fs.existsSync(pluginRoot) ) {\n      await registerPlugins(pluginRoot, app)\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  \n  // 获取当前的路由信息\n  fkp.getRouter = function(){\n    return router.getRoute(ctx)\n  }\n\n  const myfkp = fkp(null)\n  \n  // 封装koa中间件\n  app.use(async (ctx, next) => {\n    // controle层使用的fkp都是实例化的fkp\n    myfkp.ctx = ctx\n    ctx.fkp = myfkp\n\n    // 定义Fetch的上下文环境\n    Fetch.init(ctx)\n    await next()\n  })\n  \n  await _routepreset(app)\n  \n  // 初始化路由\n  await router(app)\n\n  // socketio运行时\n  socketio.run()\n  return server\n}\n"]}