{"version":3,"sources":["fkpcore/router/index.js"],"names":["dir","rootpath","__myControlFiles","fs","readdirAsync","dirData","map","file","_path","Path","join","stat","statSync","isDirectory","getCtrlFiles","concat","push","replace","app","prefix","options","controlPages","_controlPages","DEBUG","router","Router","_","isPlainObject","customControl","item","key","includes","Array","isArray","forEach","rt","forBetter","routeParam","get","post","use","routes","allowedMethods","init","ctx","_mapper","ctrlPages","isRender","filterRendeFile","params","url","route","makeRoute","fkproute","routerPrefix","opts","myStore","append","runtime","pageData","staticMapper","distribute","dealwithRoute","routerInstance","controler","pdata","renderPage","isString","indexOf","ctrl","control","passAccess","initStat","run","store","xData","controlFile","sep","getctrlData","businessPagesPath","prefixRootFile","prefixIndexFile","prefixCatFile","cat","paramsCatFile","xRoute","apilist","Fetch","list","nomatch","isAjax","fkp","_pageData","_names","set","_filename","resolve","__dirname","existsSync","_stat","isFile","length","controlConfig","require","getData","call","data","preRender","method","getStat","local","query","_stat_","body","Error","render","error","debug","Promise","glob","Url","md5","SAX","default","promisifyAll","ignoreStacic","getObjType","object","Object","prototype","toString","match","toLowerCase","pms","rjson","parse","rtn","ext","exts","tempExts","noPassCat","businessPages","mkdirSync","controlPagePath","_id","Cache","ifid","__cfile","err","console","stack","_url","indexRoot","index","_ext","extname","ctxurl","slice","title","id","gtpy","substring","path_join","jspath","src","charAt","mapper","Aotoo","inject","public","js","csspath","css","tmpletStatic","type","jspagesrc","csspagesrc","commonjs","common","commoncss","pagejs","pagecss","pagedata","lastIndexOf","_route","next","log","bind","mydata","myentry","entry","myroute","viewsRoot","state","viewsFiles","views","absOriRoute","getRoute","pages","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAuDA;;;;;;sFAKA,kBAA4BA,GAA5B,EAAiCC,QAAjC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,4BADR,GAC2B,EAD3B;AAAA;AAAA,mBAEwBC,GAAGC,YAAH,CAAgBJ,GAAhB,CAFxB;;AAAA;AAEQK,mBAFR;;AAGEA,oBAAQC,GAAR;AAAA,mGAAY,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJC,6BADI,GACIC,KAAKC,IAAL,CAAUV,GAAV,EAAeO,IAAf,CADJ;AAEJI,4BAFI,GAEGR,GAAGS,QAAH,CAAYJ,KAAZ,CAFH;;AAAA,6BAGNG,IAHM;AAAA;AAAA;AAAA;;AAAA,6BAIJA,KAAKE,WAAL,EAJI;AAAA;AAAA;AAAA;;AAAA,sCAKNX,gBALM;AAAA;AAAA,+BAKwBY,aAAaN,KAAb,EAAoBP,QAApB,CALxB;;AAAA;AAAA;;AAAA,oCAKWc,MALX;;AAAA;AAAA;;AAAA;AAONb,yCAAiBc,IAAjB,CAAsBR,MAAMS,OAAN,CAAchB,QAAd,EAAwB,EAAxB,CAAtB;;AAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA;AAHF,8CAcSC,gBAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeY,Y;;;;;AAiBf;;;AAmJA;;;;;;;uFAMA,kBAAoBI,GAApB,EAAyBC,MAAzB,EAAiCC,OAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC4BC,cAD5B;;AAAA;AACMC,yBADN;;AAEEC,kBAAM,sBAAN,EAA8BD,aAA9B;AACME,kBAHR,GAGiBL,SAAS,IAAIM,MAAJ,CAAW,EAAEN,QAAQA,MAAV,EAAX,CAAT,GAA0C,IAAIM,MAAJ,EAH3D;;AAIE,gBAAIL,WAAWM,EAAEC,aAAF,CAAgBP,OAAhB,CAAf,EAAyC;AACnCQ,2BADmC;;AAEvC,kBAAIR,QAAQQ,aAAZ,EAA2B;AACzBA,gCAAgBR,QAAQQ,aAAxB;AACD;AACDF,gBAAEpB,GAAF,CAAMc,OAAN,EAAe,UAACS,IAAD,EAAOC,GAAP,EAAe;AAC5B,oBAAIJ,EAAEK,QAAF,CAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,KAAvB,CAAX,EAA0CD,GAA1C,CAAJ,EAAoD;AAClD,sBAAI,OAAOD,IAAP,IAAe,QAAnB,EAA6BA,OAAO,CAACA,IAAD,CAAP;AAC7B,sBAAI,CAACG,MAAMC,OAAN,CAAcJ,IAAd,CAAL,EAA0B;AAC1BA,uBAAKK,OAAL,CAAa,cAAM;AACjB,wBAAIJ,OAAO,KAAX,EAAkB;AAChB,0BAAIK,MAAM,GAAV,EAAe;AACbX,+BAAOM,GAAP,EAAYK,EAAZ,GAA0BP,iBAAiBQ,UAAUZ,MAAV,EAAkBF,aAAlB,CAA3C,OAAgBE,MAAhB;AACD;AACF,qBAJD,MAIO;AACLA,6BAAOM,GAAP,EAAYK,EAAZ,GAA0BP,iBAAiBQ,UAAUZ,MAAV,EAAkBF,aAAlB,CAA3C,OAAgBE,MAAhB;AACD;AACF,mBARD;AASD,iBAZD,MAYO;AACLa,6BAAWH,OAAX,CAAmB,iBAAS;AAC1BV,2BAAOc,GAAP,CAAW9B,KAAX,GAA4BoB,iBAAiBQ,UAAUZ,MAAV,EAAkBF,aAAlB,CAA7C,OAAkBE,MAAlB;AACAA,2BAAOe,IAAP,CAAY/B,KAAZ,GAA6BoB,iBAAiBQ,UAAUZ,MAAV,EAAkBF,aAAlB,CAA9C,OAAmBE,MAAnB;AACD,mBAHD;AAID;AACF,eAnBD;AAoBD,aAzBD,MAyBO;AACLa,yBAAWH,OAAX,CAAmB,gBAAQ;AACzBV,uBAAOc,GAAP,CAAWT,IAAX,EAAiBO,UAAUZ,MAAV,EAAkBF,aAAlB,CAAjB;AACA,oBAAIO,QAAQ,GAAZ,EAAiB;AACfL,yBAAOe,IAAP,CAAYV,IAAZ,EAAkBO,UAAUZ,MAAV,EAAkBF,aAAlB,CAAlB;AACD;AACF,eALD;AAMD;AACDJ,gBAAIsB,GAAJ,CAAQhB,OAAOiB,MAAP,EAAR;AACAvB,gBAAIsB,GAAJ,CAAQhB,OAAOkB,cAAP,EAAR;;AAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;AAqDf;;;;;;;uFAMA,kBAA6BC,GAA7B,EAAkCC,OAAlC,EAA2CC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,oBAFR,GAEmBC,gBAAgBJ,IAAIK,MAApB,EAA4BL,IAAIM,GAAhC,CAFnB;AAGQC,iBAHR,GAGgBJ,WAAWK,UAAUR,GAAV,CAAX,GAA4B,KAH5C;;AAAA,gBAISO,KAJT;AAAA;AAAA;AAAA;;AAAA,kBAIsB,YAJtB;;AAAA;AAKIP,gBAAIS,QAAJ,GAAeF,KAAf;AACIG,wBANR,GAMuB,KAAKC,IAAL,CAAUpC,MANjC;;AAOIyB,gBAAIU,YAAJ,GAAmBA,YAAnB;AACAE,oBAAQC,MAAR,CAAe;AACbN,qBAAO;AACLO,yBAAS;AACPP,yBAAOA,KADA;AAEPhC,0BAAQmC;AAFD;AADJ;AADM,aAAf;AAQA/B,kBAAM,0BAAN,EAAkC4B,KAAlC;AACA5B,kBAAM,iCAAN,EAAyC+B,YAAzC;;AAEIK,oBAnBR,GAmBmBC,aAAahB,GAAb,EAAkBC,OAAlB,EAA2BM,KAA3B,EAAkCG,YAAlC,CAnBnB;;AAAA,gBAoBSK,QApBT;AAAA;AAAA;AAAA;;AAAA,kBAoByB,aApBzB;;AAAA;AAAA,8CAqBgBE,UAAL,WAAgBV,KAAhB,EAAuBQ,QAAvB,EAAiCb,SAAjC,EAA4C,IAA5C,CArBX;;AAAA;AAAA;AAAA;;AAuBIvB,kBAAM,0BAAN;AACA;AACA;;AAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeuC,a;;;;;AA6Bf;;;;uFACA,kBAA0BX,KAA1B,EAAiCQ,QAAjC,EAA2Cb,SAA3C,EAAsDiB,cAAtD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BC,UAAU,IAAV,EAAgBb,KAAhB,EAAuBQ,QAAvB,EAAiCb,SAAjC,EAA4CiB,cAA5C,CAD1B;;AAAA;AAAA;AAAA;AACOE,iBADP;AACc9B,cADd;AAAA;AAAA,mBAEe+B,WAAW,IAAX,EAAiB/B,EAAjB,EAAqB8B,KAArB,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeJ,U;;;;;;wFAMf,kBAAyBjB,GAAzB,EAA8BO,KAA9B,EAAqCQ,QAArC,EAA+Cb,SAA/C,EAA0DiB,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AACMT,wBADN,GACqBS,eAAeR,IAAf,CAAoBpC,MADzC;;AAEE,gBAAIO,EAAEyC,QAAF,CAAWb,YAAX,KAA4BA,aAAac,OAAb,CAAqB,GAArB,KAA6B,CAA7D,EAAgE;AAC9Dd,6BAAeA,aAAarC,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CAAf;AACD;;AAJH;AAOQoD,gBAPR,GAOeC,QAAQnB,KAAR,EAAeP,GAAf,EAAoBe,QAApB,EAA8BI,cAA9B,CAPf;AAQQQ,sBARR,GAQqB,KARrB;;AAAA,iBASQF,KAAKG,QATb;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUuBH,KAAKI,GAAL,CAAS7B,GAAT,CAVvB;;AAAA;AAUMe,oBAVN;;AAWMR,oBAAQkB,KAAKK,KAAL,CAAWvB,KAAX,IAAoBA,KAA5B;AAXN;AAAA;;AAAA;AAaUwB,iBAbV,GAakB,KAblB;AAcM;;AACMC,uBAfZ,GAe0BnE,KAAKoE,GAAL,GAAW1B,KAAX,GAAmB,KAf7C;;AAAA,kBAgBUL,UAAUsB,OAAV,CAAkBQ,WAAlB,IAAiC,CAAC,CAhB5C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiBsBE,YAAY,CAACC,oBAAoB,GAApB,GAA0B5B,KAA3B,CAAZ,EAA+CA,KAA/C,EAAsDP,GAAtD,EAA2De,QAA3D,EAAqEU,IAArE,CAjBtB;;AAAA;AAiBQM,iBAjBR;AAAA;AAAA;;AAAA;AAAA,iBAoBerB,YApBf;AAAA;AAAA;AAAA;;AAqBQH,oBAAQG,YAAR;AACI0B,0BAtBZ,GAsB6BvE,KAAKC,IAAL,CAAUqE,iBAAV,EAA6BzB,YAA7B,CAtB7B;AAuBY2B,2BAvBZ,GAuB8BxE,KAAKC,IAAL,CAAUqE,iBAAV,EAA6BzB,YAA7B,EAA2C,QAA3C,CAvB9B;AAwBY4B,yBAxBZ,GAwB4BzE,KAAKC,IAAL,CAAUqE,iBAAV,EAA6BzB,YAA7B,EAA2CV,IAAIK,MAAJ,CAAWkC,GAAX,IAAkB,EAA7D,CAxB5B;AAAA;AAAA,mBAyBsBL,YAAY,CAACI,aAAD,EAAgBD,eAAhB,EAAiCD,cAAjC,CAAZ,EAA8D7B,KAA9D,EAAqEP,GAArE,EAA0Ee,QAA1E,EAAoFU,IAApF,CAzBtB;;AAAA;AAyBQM,iBAzBR;AAAA;AAAA;;AAAA;AAAA,iBA6BY/B,IAAIK,MAAJ,CAAWkC,GA7BvB;AAAA;AAAA;AAAA;;AA8BcC,yBA9Bd,GA8B8B3E,KAAKC,IAAL,CAAUqE,iBAAV,EAA6BnC,IAAIK,MAAJ,CAAWkC,GAAxC,CA9B9B;AA+BgBE,kBA/BhB,GA+ByBzC,IAAIK,MAAJ,CAAWkC,GA/BpC;AAAA;AAAA,mBAgCwBL,YAAY,CAACM,aAAD,CAAZ,EAA6BC,MAA7B,EAAqCzC,GAArC,EAA0Ce,QAA1C,EAAoDU,IAApD,CAhCxB;;AAAA;AAgCUM,iBAhCV;;AAAA;AAAA,gBAoCWA,KApCX;AAAA;AAAA;AAAA;;AAqCYW,mBArCZ,GAqCsBC,MAAMD,OArC5B;;AAAA,kBAsCYA,QAAQE,IAAR,CAAarC,KAAb,KAAuBA,UAAU,UAtC7C;AAAA;AAAA;AAAA;;AAuCUoB,yBAAa,IAAb;AAvCV;AAAA,mBAwCwBO,YAAY,CAAC,qBAAD,CAAZ,EAAqC3B,KAArC,EAA4CP,GAA5C,EAAiDe,QAAjD,EAA2DU,IAA3D,CAxCxB;;AAAA;AAwCUM,iBAxCV;AAAA;AAAA;;AAAA;AA0CUA,oBAAQ,EAAEc,SAAS,IAAX,EAAR;;AA1CV;AA6CYC,kBA7CZ,GA6CqB9C,IAAI+C,GAAJ,CAAQD,MAAR,EA7CrB;;AA8CM,gBAAInB,cAAcmB,MAAlB,EAA0B/B,WAAWgB,KAAX;;AA9ChC;AAAA,8CAgDW,CAAChB,QAAD,EAAWR,KAAX,CAhDX;;AAAA;AAAA;AAAA;;AAkDI5B,kBAAM,sBAAN;AACA;;AAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeyC,S;;;;;AAuDf;;;;wFACA,kBAA2BxD,KAA3B,EAAkC2C,KAAlC,EAAyCP,GAAzC,EAA8CgD,SAA9C,EAAyDvB,IAAzD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQwB,kBAFR,GAEiB,EAFjB;;AAGIxB,iBAAKyB,GAAL,CAAS,OAAT,EAAkB3C,KAAlB;;AAHJ,iBAIQnB,MAAMC,OAAN,CAAczB,KAAd,CAJR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAKM,wDAAsBA,KAAtB,qGAA6B;AAApBuF,uBAAoB;;AAC3BA,0BAAYtF,KAAKuF,OAAL,CAAaC,SAAb,EAAwBF,YAAY,KAApC,CAAZ;AACA,kBAAI5F,GAAG+F,UAAH,CAAcH,SAAd,CAAJ,EAA8B;AACxBI,qBADwB,GAChBhG,GAAGS,QAAH,CAAYmF,SAAZ,CADgB;;AAE5B,oBAAII,SAASA,MAAMC,MAAN,EAAb,EAA6BP,OAAO7E,IAAP,CAAY+E,SAAZ;AAC9B;AACF;AAXP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,iBAaQF,OAAOQ,MAbf;AAAA;AAAA;AAAA;;AAcUC,yBAdV,GAc0BC,QAAQV,OAAO,CAAP,CAAR,EAAmBW,OAAnB,CAA2BC,IAA3B,CAAgC7D,GAAhC,EAAqCgD,SAArC,CAd1B;AAAA;AAAA,mBAewBvB,KAAKI,GAAL,CAAS7B,GAAT,EAAc0D,aAAd,CAfxB;;AAAA;AAeMV,qBAfN;AAAA;AAAA;;AAAA;AAiBMA,wBAAY,KAAZ;;AAjBN;AAAA,8CAmBWA,SAnBX;;AAAA;AAAA;AAAA;;AAqBIrE,kBAAM,wBAAN;AArBJ,8CAsBW,EAAEkE,SAAS,IAAX,EAtBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeX,W;;;;;AAyCf;;wFACA,mBAA0BlC,GAA1B,EAA+BO,KAA/B,EAAsCuD,IAAtC,EAA4ChB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEInE,kBAAM,0BAAN,EAAkCmF,IAAlC;AACAnF,kBAAM,uBAAN,EAA+B4B,KAA/B;AACAA,oBAAQwD,UAAUxD,KAAV,CAAR;AAJJ,4BAKYP,IAAIgE,MALhB;AAAA,gDAMW,KANX,yBAWW,MAXX;AAAA;;AAAA;AAOYC,mBAPZ,GAOsBjE,IAAIkE,KAAJ,CAAUC,KAAV,CAAgBC,MAPtC;;AAAA,kBAQaH,WAAWA,YAAY,MAAxB,IAAmCnB,MAR/C;AAAA;AAAA;AAAA;;AAAA,+CAQ8D9C,IAAIqE,IAAJ,GAAWP,IARzE;;AAAA;AAAA,kBASYA,QAAQA,KAAKjB,OATzB;AAAA;AAAA;AAAA;;AAAA,kBASwC,IAAIyB,KAAJ,CAAU,eAAV,CATxC;;AAAA;AAAA;AAAA,mBAUqBtE,IAAIuE,MAAJ,CAAWhE,KAAX,EAAkBuD,IAAlB,CAVrB;;AAAA;AAAA;;AAAA;AAAA,+CAYe9D,IAAIqE,IAAJ,GAAWP,IAZ1B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAeI,gBAAIhB,MAAJ,EAAY;AACV9C,kBAAIqE,IAAJ,GAAW;AACTG,uBAAO;AADE,eAAX;AAGD,aAJD,MAIO;AACLxE,kBAAIqE,IAAJ,GAAW,SAAX;AACD;AACD;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe/C,U;;;;;;;AAvaf;;;AAGA,IAAM3C,QAAQ8F,MAAM,YAAN,CAAd;AACA,IAAIlH,KAAKoG,QAAQ,IAAR,CAAT;AACA,IAAMe,UAAUf,QAAQ,UAAR,CAAhB;AACA,IAAMgB,OAAOhB,QAAQ,MAAR,CAAb;AACA,IAAM9F,OAAO8F,QAAQ,MAAR,CAAb;AACA,IAAMiB,MAAMjB,QAAQ,KAAR,CAAZ;AACA,IAAM9E,SAAS8E,QAAQ,YAAR,CAAf;AACA,IAAMkB,MAAMlB,QAAQ,aAAR,CAAZ;AACA,IAAM/C,UAAUkE,IAAI,kBAAJ,CAAhB;AACA,IAAMpD,UAAUiC,QAAQ,WAAR,EAAqBoB,OAArC;AACAxH,KAAKmH,QAAQM,YAAR,CAAqBzH,EAArB,CAAL;;AAEA;AACA,IAAI4E,oBAAoB,EAAxB;AACA,IAAM8C,eAAe,CAAC,KAAD,EAAQ,IAAR,EAAc,QAAd,EAAwB,KAAxB,CAArB;AACA,IAAMxF,aAAa,CACjB,GADiB,EAEjB,OAFiB,EAGjB,cAHiB,EAIjB,kBAJiB,CAAnB;;AAOA,SAASyF,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BzB,IAA1B,CAA+BsB,MAA/B,EAAuCI,KAAvC,CAA6C,oBAA7C,EAAmE,CAAnE,EAAsEC,WAAtE,EAAP;AACD;;AAED;;;;;;AAMA,SAASpF,eAAT,CAAyBqF,GAAzB,EAA8BnF,GAA9B,EAAmC;AACjC,MAAIoF,QAAQ7H,KAAK8H,KAAL,CAAWrF,GAAX,CAAZ;AACA,MAAIsF,MAAM,KAAV;AACA,MAAIC,MAAMH,MAAMG,GAAhB;AACA,MAAItD,MAAMkD,IAAIlD,GAAd;;AAEA,MAAIuD,OAAO,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,MAAxB,EAAgC,OAAhC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,CAAX;AACA,MAAIC,WAAW,CAAC,OAAD,EAAU,QAAV,CAAf;AACA,MAAIC,YAAY,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,MAArB,EAA6B,OAA7B,EAAsC,QAAtC,CAAhB;;AAEA,MAAI,CAACH,GAAL,EAAUD,MAAM,IAAN;;AAEV,SAAO,CAACC,GAAD,IAAQE,SAAS5G,QAAT,CAAkB0G,GAAlB,CAAR,IAAkCG,UAAU7G,QAAV,CAAmBoD,GAAnB,CAAzC;;AAEA;AACA;;AAEA;AACD,CAyBD,SAAS9D,YAAT,GAAwB;AAAA;;AACtB;AACA,MAAMwH,gBAAgB9D,iBAAtB;;AAEA,MAAI,CAAC5E,GAAG+F,UAAH,CAAc2C,aAAd,CAAL,EAAmC;AACjC1I,OAAG2I,SAAH,CAAaD,aAAb,EAA4B,MAA5B;AACD;;AAEDtH,QAAM,kBAAN,EAA0BsH,aAA1B;AACA,MAAME,kBAAkBF,aAAxB;AACA,MAAMG,MAAMD,eAAZ;;AAEA,MAAI;AACF,QAAI5I,GAAG+F,UAAH,CAAc6C,eAAd,CAAJ,EAAoC;AAClC,aAAOE,MAAMC,IAAN,CAAWF,GAAX,2EAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACClI,aAAaiI,eAAb,EAA8BA,eAA9B,CADD;;AAAA;AACfI,uBADe;AACkDF,sBAAMnD,GAAN,CAAUkD,GAAV,EAAeG,OAAf;AADlD,kDAEdA,OAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB,GAAP;AAID,KALD,MAKO;AACL,YAAM,IAAIjC,KAAJ,CAAU,UAAV,CAAN;AACD;AACF,GATD,CASE,OAAOkC,GAAP,EAAY;AACZC,YAAQjC,KAAR,CAAcgC,IAAIE,KAAlB;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,SAASlG,SAAT,CAAmBR,GAAnB,EAAwBzB,MAAxB,EAAgC;AAC9B,MAAI8B,SAASL,IAAIK,MAAjB;AACA,MAAIsG,OAAO3G,IAAIM,GAAf;AACA,MAAMyC,MAAM/C,IAAI+C,GAAhB;AACA,MAAM6D,YAAY7D,IAAI8D,KAAtB;AACA7G,MAAIkE,KAAJ,GAAYU,IAAIe,KAAJ,CAAU3F,IAAIM,GAAd,EAAmB,IAAnB,CAAZ;;AAEA,MAAIwG,OAAOjJ,KAAKkJ,OAAL,CAAa/G,IAAIM,GAAjB,CAAX;AACA,MAAI0G,SAAShH,IAAIM,GAAJ,CAAQ2G,KAAR,CAAc,CAAd,EAAiB5I,OAAjB,CAAyByI,IAAzB,EAA+B,EAA/B,KAAsC,EAAnD;;AAEA,MAAIH,KAAKnF,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAzB,EAA4B;AAC1BmF,WAAOA,KAAKM,KAAL,CAAW,CAAX,EAAcN,KAAKnF,OAAL,CAAa,GAAb,CAAd,CAAP;AACAwF,aAASA,OAAOC,KAAP,CAAa,CAAb,EAAgBD,OAAOxF,OAAP,CAAe,GAAf,CAAhB,CAAT;AACD;AACD,MAAIkE,QAAQ7H,KAAK8H,KAAL,CAAWgB,IAAX,CAAZ;AACA,MAAIpG,QAAQ,KAAZ;AACA,MAAIgC,MAAMlC,OAAOkC,GAAP,IAAc,EAAxB;AAAA,MAA4B2E,QAAQ7G,OAAO6G,KAAP,IAAgB,EAApD;AAAA,MAAwDC,KAAK9G,OAAO8G,EAAP,IAAa,EAA1E;AACA,MAAIC,OAAOlC,UAAX;;AAEA,MAAIiC,EAAJ,EAAQ;AACNC,SAAKD,EAAL,MAAa,QAAb,GACI5G,QAAQ2G,QACN3E,MAAM,GAAN,GAAY2E,KADN,GAEN3E,GAHN,GAIIhC,QAAQgC,MAAM,GAAN,GAAY2E,KAAZ,GAAoB,GAApB,GAA0BC,EAJtC;AAKD,GAND,MAQK,IAAID,KAAJ,EAAW;AACdA,YAAQA,MAAM7I,OAAN,CAAcqH,MAAMG,GAApB,EAAyB,EAAzB,CAAR;AACAtF,YAAQ6G,KAAKF,KAAL,MAAgB,QAAhB,GAA2B3E,GAA3B,GAAiCA,MAAM,GAAN,GAAY2E,KAArD;AACD,GAHI,MAKA,IAAI3E,GAAJ,EAAS;AACZA,UAAMA,IAAIlE,OAAJ,CAAYqH,MAAMG,GAAlB,EAAuB,EAAvB,CAAN;AACAtF,YAAQ6G,KAAK7E,GAAL,MAAc,QAAd,GAAyBqE,aAAa,OAAtC,GAAgDrE,GAAxD;AACD,GAHI,MAKA;AACHhC,YAAQqG,aAAa,OAArB;AACD;AACD,MAAII,UAAUzG,UAAUyG,MAAxB,EAAgCzG,QAAQyG,MAAR;AAChC,MAAIzI,MAAJ,EAAYgC,QAAQhC,OAAOiD,OAAP,CAAe,GAAf,KAAuB,CAAvB,GAA2BjD,OAAO8I,SAAP,CAAiB,CAAjB,CAA3B,GAAiD9I,MAAzD;AACZ,SAAOgC,KAAP;AACD;;AAED,SAAS+G,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAID,OAAO/F,OAAP,CAAe,MAAf,KAA0B,CAA1B,IAA+B+F,OAAO/F,OAAP,CAAe,IAAf,KAAwB,CAA3D,EAA8D;AAC5D,QAAI+F,OAAOE,MAAP,CAAcF,OAAO9D,MAAP,GAAgB,CAA9B,KAAoC,GAAxC,EAA6C;AAC3C8D,eAASA,OAAOF,SAAP,CAAiB,CAAjB,EAAoBE,OAAO9D,MAAP,GAAgB,CAApC,CAAT;AACD;AACD,QAAI+D,IAAIC,MAAJ,CAAW,CAAX,KAAiB,GAArB,EAA0B;AACxB,aAAOF,SAASC,GAAhB;AACD,KAFD,MAEO;AACL,aAAOD,SAAS,GAAT,GAAeC,GAAtB;AACD;AACF,GATD,MASO;AACL,WAAO3J,KAAKC,IAAL,CAAUyJ,MAAV,EAAkBC,GAAlB,CAAP;AACD;AACF;;AAED,SAASxG,YAAT,CAAsBhB,GAAtB,EAA2B0H,MAA3B,EAAmCnH,KAAnC,EAA0CG,YAA1C,EAAwD;AACtD,MAAM6G,SAASI,MAAMC,MAAN,CAAaC,MAAb,CAAoBC,EAAnC;AACA,MAAMC,UAAUJ,MAAMC,MAAN,CAAaC,MAAb,CAAoBG,GAApC;AACA,MAAIC,eAAe,SAAfA,YAAe,CAACT,GAAD,EAAMU,IAAN,EAAe;AAChC,QAAIA,QAAQ,IAAZ,EAAkB;AAChB,UAAMC,YAAYb,UAAUC,MAAV,EAAkBC,GAAlB,CAAlB;AACA,aAAO,yCAAyCW,SAAzC,GAAqD,cAA5D;AACD;AACD,QAAID,QAAQ,KAAZ,EAAmB;AACjB,UAAME,aAAad,UAAUS,OAAV,EAAmBP,GAAnB,CAAnB;AACA,aAAO,kCAAkCY,UAAlC,GAA+C,MAAtD;AACD;AACF,GATD;;AAWA,MAAItJ,EAAEyC,QAAF,CAAWb,YAAX,KAA4BA,aAAac,OAAb,CAAqB,GAArB,KAA6B,CAA7D,EAAgEd,eAAeA,aAAarC,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CAAf;AAChE,MAAI,CAACqJ,MAAL,EAAa,OAAO,KAAP;AACb,MAAI3G,WAAW;AACb;AACAsH,cAAUJ,aAAcP,OAAOI,EAAP,CAAUQ,MAAV,IAAoB,WAAlC,EAAgD,IAAhD,CAFG,EAEsD;AACnEC,eAAWN,aAAcP,OAAOM,GAAP,CAAWM,MAAX,IAAqB,YAAnC,EAAkD,KAAlD,CAHE,EAGwD;AACrEE,YAAQ,EAJK;AAKbC,aAAS,EALI;AAMbC,cAAU;AAEZ;AARe,GAAf,CASA,IAAInI,MAAMiB,OAAN,CAAc,GAAd,KAAsB,CAA1B,EAA6BjB,QAAQA,MAAM8G,SAAN,CAAgB,CAAhB,CAAR;AAC7B,MAAI9G,MAAMoI,WAAN,CAAkB,GAAlB,KAA2BpI,MAAMkD,MAAN,GAAe,CAA9C,EAAkDlD,QAAQA,MAAM8G,SAAN,CAAgB,CAAhB,EAAmB9G,MAAMkD,MAAN,GAAe,CAAlC,CAAR;AAClD,MAAIiE,OAAOM,GAAP,CAAWzH,KAAX,CAAJ,EAAuBQ,SAAS0H,OAAT,GAAmBR,aAAaP,OAAOM,GAAP,CAAWzH,KAAX,CAAb,EAAgC,KAAhC,CAAnB;AACvB,MAAImH,OAAOI,EAAP,CAAUvH,KAAV,CAAJ,EAAsBQ,SAASyH,MAAT,GAAkBP,aAAaP,OAAOI,EAAP,CAAUvH,KAAV,CAAb,EAA+B,IAA/B,CAAlB;;AAEtB,MAAIqI,SAASrI,KAAb;AACA,MAAIG,YAAJ,EAAkB;AAChBkI,aAASlI,YAAT;AACA,QAAIgH,OAAOM,GAAP,CAAWY,MAAX,CAAJ,EAAwB7H,SAAS0H,OAAT,GAAmBR,aAAaP,OAAOM,GAAP,CAAWY,MAAX,CAAb,EAAiC,KAAjC,CAAnB;AACxB,QAAIlB,OAAOI,EAAP,CAAUc,MAAV,CAAJ,EAAuB7H,SAASyH,MAAT,GAAkBP,aAAaP,OAAOI,EAAP,CAAUc,MAAV,CAAb,EAAgC,IAAhC,CAAlB;AACxB;;AAED,SAAO7H,QAAP;AACD;;AAiDD,SAASvB,SAAT,CAAmBZ,MAAnB,EAA2BsB,SAA3B,EAAsC;AACpC,SAAO;AAAA,2GAAeF,GAAf,EAAoB6I,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAEC5D,aAAazD,OAAb,CAAqBxB,IAAIK,MAAJ,CAAWkC,GAAhC,KAAwC,CAAC,CAF1C;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGYrB,cAAc2C,IAAd,CAAmB,IAAnB,EAAyB7D,GAAzB,EAA8BA,IAAI+C,GAAJ,CAAQ/B,YAAtC,EAAoDd,SAApD,CAHZ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMHuG,sBAAQqC,GAAR,CAAY,aAAEpC,KAAd;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,MAQLqC,IARK,CAQAnK,MARA,CAAP;AASD;;AA8HD,SAASmF,SAAT,CAAmBxE,EAAnB,EAAuB;AACrB,MAAMyJ,SAASpI,QAAQlB,GAAR,EAAf;AACA,MAAMuJ,UAAUD,OAAOE,KAAvB;AACA,MAAMC,UAAUH,OAAOzI,KAAP,CAAaO,OAAb,CAAqBP,KAArC;AACA,MAAM6I,YAAYH,QAAQI,KAAR,CAAcD,SAAhC;AACA,MAAME,aAAaL,QAAQI,KAAR,CAAcE,KAAjC;AACA,MAAIhK,MAAM4J,OAAV,EAAmB;AACjB,QAAMK,cAAc3L,KAAKC,IAAL,CAAUsL,SAAV,EAAqBD,UAAU,OAA/B,CAApB;AACA,QAAIG,WAAW9H,OAAX,CAAmBgI,WAAnB,IAAkC,CAAC,CAAvC,EAA0C;AACxC,aAAOL,OAAP;AACD;AACF;AACD,SAAO5J,EAAP;AACD;;AA6BDQ,KAAKS,SAAL,GAAiBA,SAAjB;AACAT,KAAK0J,QAAL,GAAgBjJ,SAAhB;AACAT,KAAKiB,YAAL,GAAoBA,YAApB;AACAjB,KAAKuB,UAAL,GAAkBA,UAAlB;AACAvB,KAAK2J,KAAL,GAAa,UAAU9L,KAAV,EAAiB;AAC5BuE,sBAAoBvE,KAApB;AACD,CAFD;;AAIA+L,OAAOC,OAAP,GAAiB7J,IAAjB","file":"../../../fkpcore/router/index.js","sourcesContent":["/**\n * Module dependencies.\n */\nconst DEBUG = debug('fkp:router')\nlet fs = require('fs');\nconst Promise = require('bluebird')\nconst glob = require('glob')\nconst Path = require('path')\nconst Url = require('url')\nconst Router = require('koa-router')\nconst md5 = require('blueimp-md5')\nconst myStore = SAX('AOTOO-KOA-SERVER')\nconst control = require('./control').default\nfs = Promise.promisifyAll(fs)\n\n// const businessPagesPath = '../../pages'\nlet businessPagesPath = ''\nconst ignoreStacic = ['css', 'js', 'images', 'img']\nconst routeParam = [\n  '/',\n  '/:cat',\n  '/:cat/:title',\n  '/:cat/:title/:id'\n]\n\nfunction getObjType(object) {\n  return Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1].toLowerCase();\n};\n\n/**\n * 过滤渲染文件\n * {param1} {json}   this.params\n * {param2} {json}   json of parse this.path\n * return   {boleean}\n**/\nfunction filterRendeFile(pms, url) {\n  let rjson = Path.parse(url)\n  let rtn = false;\n  let ext = rjson.ext;\n  let cat = pms.cat;\n\n  let exts = ['.css', '.js', '.swf', '.jpg', '.jpeg', '.png', '.bmp', '.ico'];\n  let tempExts = ['.html', '.shtml'];\n  let noPassCat = ['css', 'js', 'img', 'imgs', 'image', 'images'];\n\n  if (!ext) rtn = true;\n\n  return !ext || tempExts.includes(ext) || noPassCat.includes(cat)\n\n  // if (_.indexOf(tempExts, ext) > -1) rtn = true;\n  // if (_.indexOf(noPassCat, cat) > -1) rtn = false;\n\n  // return rtn;\n}\n\n/**\n * \n * @param {String} dir 遍历的目标目录\n * @param {String} rootpath 根目录的绝对路径\n */\nasync function getCtrlFiles(dir, rootpath) {\n  const __myControlFiles = []\n  const dirData = await fs.readdirAsync(dir)\n  dirData.map(async (file) => {\n    const _path = Path.join(dir, file)\n    const stat = fs.statSync(_path)\n    if (stat) {\n      if (stat.isDirectory()) {\n        __myControlFiles.concat(await getCtrlFiles(_path, rootpath))\n      } else {\n        __myControlFiles.push(_path.replace(rootpath, ''))\n      }\n    }\n  })\n  return __myControlFiles\n}\n\n// 预读取pages目录下的所有文件路径，并保存\nfunction controlPages() {\n  // const businessPages = Path.join(__dirname, businessPagesPath)\n  const businessPages = businessPagesPath\n\n  if (!fs.existsSync(businessPages)) {\n    fs.mkdirSync(businessPages, '0777')\n  }\n\n  DEBUG('businessPages %s', businessPages)\n  const controlPagePath = businessPages\n  const _id = controlPagePath\n\n  try {\n    if (fs.existsSync(controlPagePath)) {\n      return Cache.ifid(_id, async () => {\n        const __cfile = await getCtrlFiles(controlPagePath, controlPagePath);  Cache.set(_id, __cfile)\n        return __cfile\n      })\n    } else {\n      throw new Error('控制层目录不存在')\n    }\n  } catch (err) {\n    console.error(err.stack);\n  }\n\n  // let ctrlFiles = []\n  // return Cache.ifid(_id, () => new Promise((res, rej) => {\n  //   return function getCtrlFiles(dir) {\n  //     fs.readdir(dir, (err, data) => {\n  //       if (err) throw err\n  //       data.map(file => {\n  //         const _path = Path.join(dir, file)\n  //         const stat = fs.statSync(_path)\n  //         if (stat && stat.isDirectory()) return getCtrlFiles(_path)\n  //         const okPath = _path.replace(controlPagePath, '')\n  //         ctrlFiles.push(okPath)\n  //         // ctrlFiles.push(Path.join(okPath))\n  //       }) // end map\n  //       Cache.set(_id, ctrlFiles)\n  //       res(ctrlFiles)\n  //     })\n  //   }(controlPagePath)\n  // })\n  // )\n}\n\nfunction makeRoute(ctx, prefix) {\n  let params = ctx.params\n  let _url = ctx.url\n  const fkp = ctx.fkp\n  const indexRoot = fkp.index\n  ctx.local = Url.parse(ctx.url, true)\n\n  let _ext = Path.extname(ctx.url)\n  let ctxurl = ctx.url.slice(1).replace(_ext, '') || ''\n\n  if (_url.indexOf('?') > -1) {\n    _url = _url.slice(0, _url.indexOf('?'))\n    ctxurl = ctxurl.slice(0, ctxurl.indexOf('?'))\n  }\n  let rjson = Path.parse(_url)\n  let route = false\n  let cat = params.cat || '', title = params.title || '', id = params.id || '';\n  let gtpy = getObjType;\n\n  if (id) {\n    gtpy(id) === 'number'\n      ? route = title\n        ? cat + '/' + title\n        : cat\n      : route = cat + '/' + title + '/' + id\n  }\n\n  else if (title) {\n    title = title.replace(rjson.ext, '');\n    route = gtpy(title) === 'number' ? cat : cat + '/' + title\n  }\n\n  else if (cat) {\n    cat = cat.replace(rjson.ext, '');\n    route = gtpy(cat) === 'number' ? indexRoot || 'index' : cat\n  }\n\n  else {\n    route = indexRoot || 'index'\n  }\n  if (ctxurl && route !== ctxurl) route = ctxurl\n  if (prefix) route = prefix.indexOf('/') == 0 ? prefix.substring(1) : prefix\n  return route\n}\n\nfunction path_join(jspath, src) {\n  if (jspath.indexOf('http') == 0 || jspath.indexOf('//') == 0) {\n    if (jspath.charAt(jspath.length - 1) == '/') {\n      jspath = jspath.substring(0, jspath.length - 1)\n    }\n    if (src.charAt(0) == '/') {\n      return jspath + src\n    } else {\n      return jspath + '/' + src\n    }\n  } else {\n    return Path.join(jspath, src);\n  }\n}\n\nfunction staticMapper(ctx, mapper, route, routerPrefix) {\n  const jspath = Aotoo.inject.public.js\n  const csspath = Aotoo.inject.public.css\n  let tmpletStatic = (src, type) => {\n    if (type == 'js') {\n      const jspagesrc = path_join(jspath, src)\n      return '<script type=\"text/javascript\" src=\"' + jspagesrc + '\" ></script>'\n    }\n    if (type == 'css') {\n      const csspagesrc = path_join(csspath, src)\n      return '<link rel=\"stylesheet\" href=\"' + csspagesrc + '\" />'\n    }\n  }\n\n  if (_.isString(routerPrefix) && routerPrefix.indexOf('/') == 0) routerPrefix = routerPrefix.replace('/', '')\n  if (!mapper) return false\n  let pageData = {\n    //静态资源\n    commonjs: tmpletStatic((mapper.js.common || 'common.js'), 'js'),   //公共css\n    commoncss: tmpletStatic((mapper.css.common || 'common.css'), 'css'), //公共js\n    pagejs: '',\n    pagecss: '',\n    pagedata: {}\n  }\n  //静态资源初始化\n  if (route.indexOf('/') == 0) route = route.substring(1)\n  if (route.lastIndexOf('/') == (route.length - 1)) route = route.substring(0, route.length - 1)\n  if (mapper.css[route]) pageData.pagecss = tmpletStatic(mapper.css[route], 'css')\n  if (mapper.js[route]) pageData.pagejs = tmpletStatic(mapper.js[route], 'js')\n\n  let _route = route\n  if (routerPrefix) {\n    _route = routerPrefix\n    if (mapper.css[_route]) pageData.pagecss = tmpletStatic(mapper.css[_route], 'css')\n    if (mapper.js[_route]) pageData.pagejs = tmpletStatic(mapper.js[_route], 'js')\n  }\n\n  return pageData\n}\n\n/**\n * 路由分配\n * {param1} koa implement\n * {param2} map of static file\n * return rende pages\n**/\nasync function init(app, prefix, options) {\n  let _controlPages = await controlPages()\n  DEBUG('control pages === %O', _controlPages)\n  const router = prefix ? new Router({ prefix: prefix }) : new Router()\n  if (options && _.isPlainObject(options)) {\n    let customControl\n    if (options.customControl) {\n      customControl = options.customControl\n    }\n    _.map(options, (item, key) => {\n      if (_.includes(['get', 'post', 'put', 'del'], key)) {\n        if (typeof item == 'string') item = [item]\n        if (!Array.isArray(item)) return\n        item.forEach(rt => {\n          if (key != 'get') {\n            if (rt != '/') {\n              router[key](rt, router:: (customControl || forBetter(router, _controlPages)))\n            }\n          } else {\n            router[key](rt, router:: (customControl || forBetter(router, _controlPages)))\n          }\n        })\n      } else {\n        routeParam.forEach(_path => {\n          router.get(_path, router:: (customControl || forBetter(router, _controlPages)))\n          router.post(_path, router:: (customControl || forBetter(router, _controlPages)))\n        })\n      }\n    })\n  } else {\n    routeParam.forEach(item => {\n      router.get(item, forBetter(router, _controlPages))\n      if (item != '/') {\n        router.post(item, forBetter(router, _controlPages))\n      }\n    })\n  }\n  app.use(router.routes())\n  app.use(router.allowedMethods())\n}\n\nfunction forBetter(router, ctrlPages) {\n  return async function(ctx, next) {\n    try {\n      if (ignoreStacic.indexOf(ctx.params.cat) == -1){\n        return await dealwithRoute.call(this, ctx, ctx.fkp.staticMapper, ctrlPages)\n      }\n    } catch (e) {\n      console.log(e.stack)\n    }\n  }.bind(router)\n}\n\n/**\n * 路由配置\n * {param1} koa implement\n * {param2} map of static file\n * return rende pages\n**/\nasync function dealwithRoute(ctx, _mapper, ctrlPages) {\n  try {\n    let isRender = filterRendeFile(ctx.params, ctx.url)\n    let route = isRender ? makeRoute(ctx) : false\n    if (!route) throw 'route配置不正确'\n    ctx.fkproute = route\n    let routerPrefix = this.opts.prefix\n    ctx.routerPrefix = routerPrefix\n    myStore.append({\n      route: {\n        runtime: {\n          route: route,\n          prefix: routerPrefix\n        }\n      }\n    })\n    DEBUG('dealwithRoute route = %s', route)\n    DEBUG('dealwithRoute routerPrefix = %s', routerPrefix)\n\n    let pageData = staticMapper(ctx, _mapper, route, routerPrefix)\n    if (!pageData) throw 'mapper数据不正确'\n    return ctx::distribute(route, pageData, ctrlPages, this)\n  } catch (e) {\n    DEBUG('dealwithRoute error = %O', e)\n    // console.log(e);\n    // return ctx.redirect('404')\n  }\n}\n\n// 分发路由\nasync function distribute(route, pageData, ctrlPages, routerInstance) {\n  let [pdata, rt] = await controler(this, route, pageData, ctrlPages, routerInstance)\n  return await renderPage(this, rt, pdata)\n}\n\n\nasync function controler(ctx, route, pageData, ctrlPages, routerInstance) {\n  let routerPrefix = routerInstance.opts.prefix\n  if (_.isString(routerPrefix) && routerPrefix.indexOf('/') == 0) {\n    routerPrefix = routerPrefix.replace('/', '')\n  }\n\n  try {\n    let ctrl = control(route, ctx, pageData, routerInstance)\n    let passAccess = false\n    if (ctrl.initStat) {\n      pageData = await ctrl.run(ctx)\n      route = ctrl.store.route || route\n    } else {\n      let xData = false\n      // 根据route匹配到control文件+三层路由\n      const controlFile = Path.sep + route + '.js'\n      if (ctrlPages.indexOf(controlFile) > -1) {\n        xData = await getctrlData([businessPagesPath + '/' + route], route, ctx, pageData, ctrl)\n      }\n      // 根据prefix匹配到control文件+三层路由\n      else if (routerPrefix) {\n        route = routerPrefix\n        let prefixRootFile = Path.join(businessPagesPath, routerPrefix)\n        let prefixIndexFile = Path.join(businessPagesPath, routerPrefix, '/index')\n        let prefixCatFile = Path.join(businessPagesPath, routerPrefix, ctx.params.cat || '')\n        xData = await getctrlData([prefixCatFile, prefixIndexFile, prefixRootFile], route, ctx, pageData, ctrl)\n      }\n      // pages根目录+三层路由\n      else {\n        if (ctx.params.cat) {\n          let paramsCatFile = Path.join(businessPagesPath, ctx.params.cat)\n          const xRoute = ctx.params.cat\n          xData = await getctrlData([paramsCatFile], xRoute, ctx, pageData, ctrl)\n        }\n      }\n      // 根据 Fetch.apilist 匹配到api接口，从远程借口拿去数据\n      if (!xData) {\n        let apilist = Fetch.apilist\n        if (apilist.list[route] || route === 'redirect') {\n          passAccess = true\n          xData = await getctrlData(['./passaccesscontrol'], route, ctx, pageData, ctrl)\n        } else {\n          xData = { nomatch: true }\n        }\n      }\n      const isAjax = ctx.fkp.isAjax()\n      if (passAccess || isAjax) pageData = xData\n    }\n    return [pageData, route]\n  } catch (e) {\n    DEBUG('controler error = %O', e)\n    // console.log(e.stack);\n  }\n}\n\n// match的control文件，并返回数据\nasync function getctrlData(_path, route, ctx, _pageData, ctrl) {\n  try {\n    let _names = []\n    ctrl.set('route', route)\n    if (Array.isArray(_path)) {\n      for (let _filename of _path) {\n        _filename = Path.resolve(__dirname, _filename + '.js')\n        if (fs.existsSync(_filename)) {\n          let _stat = fs.statSync(_filename)\n          if (_stat && _stat.isFile()) _names.push(_filename)\n        }\n      }\n    }\n    if (_names.length) {\n      let controlConfig = require(_names[0]).getData.call(ctx, _pageData)\n      _pageData = await ctrl.run(ctx, controlConfig)\n    } else {\n      _pageData = false\n    }\n    return _pageData\n  } catch (e) {\n    DEBUG('getctrlData error = %O', e)\n    return { nomatch: true }\n  }\n}\n\nfunction preRender(rt) {\n  const mydata = myStore.get()\n  const myentry = mydata.entry\n  const myroute = mydata.route.runtime.route\n  const viewsRoot = myentry.state.viewsRoot\n  const viewsFiles = myentry.state.views\n  if (rt != myroute) {\n    const absOriRoute = Path.join(viewsRoot, myroute + '.html')\n    if (viewsFiles.indexOf(absOriRoute) > -1) {\n      return myroute\n    }\n  }\n  return rt\n}\n\n// dealwith the data from controlPage\nasync function renderPage(ctx, route, data, isAjax) {\n  try {\n    DEBUG('renderPage pageData = %O', data)\n    DEBUG('renderPage route = %s', route)\n    route = preRender(route)\n    switch (ctx.method) {\n      case 'GET':\n        let getStat = ctx.local.query._stat_\n        if ((getStat && getStat === 'DATA') || isAjax) return ctx.body = data\n        if (data && data.nomatch) throw new Error('你访问的页面/api不存在')\n        return await ctx.render(route, data)\n      case 'POST':\n        return ctx.body = data\n    }\n  } catch (e) {\n    if (isAjax) {\n      ctx.body = {\n        error: '找不到相关信息'\n      }\n    } else {\n      ctx.body = \"找不到页面，呃\"\n    }\n    // return await ctx.render('404')\n  }\n}\n\ninit.makeRoute = makeRoute\ninit.getRoute = makeRoute\ninit.staticMapper = staticMapper\ninit.renderPage = renderPage\ninit.pages = function (_path) {\n  businessPagesPath = _path\n}\n\nmodule.exports = init\n"]}