{"version":3,"sources":["fkpcore/modules/fetch/pullapi.js"],"names":["DEBUG","debug","getMyApi","api","apilist","apiAry","split","len","length","select","_","trim","nAry","splice","nApi","join","nCollect","module","exports","_parseClientForm","param","method","url","undefined","fetchRemote","message","indexOf","_redirect","ajaxtype","list","query","toLowerCase","json","getApi","setApi","api_collect","appendApi","merge","get","_api","_param","test","_stat_","_get","_data","data","Error","error","info","post","form","_post"],"mappings":"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","file":"../../../../fkpcore/modules/fetch/pullapi.js","sourcesContent":["import path from 'path'\nimport {stringify} from 'querystring'\nconst DEBUG = debug('AKS:FETCH:PULLAPI')\n\nfunction getMyApi(api, apilist){\n  const apiAry = api.split(':')\n  let len = apiAry.length\n  const select = apilist[ _.trim(apiAry[0]) ]\n  if (len > 1 && select) {\n    const nAry = apiAry.splice(1)\n    const nApi = nAry.join(':')\n    const nCollect = select\n    return getMyApi(nApi, nCollect)\n  } else {\n    return select\n  }\n}\n\nmodule.exports = function(){\n  return {\n    _parseClientForm: function(api, param={}, method='get'){\n      let url = undefined\n      this.fetchRemote = false\n      // if(objtypeof(param)!=='object') return [null, { message: 'pullApiData === 请指定正确的参数'}]\n      if(!api) return [null, { message: 'pullApiData === 请指定正确的参数'}]\n      if(typeof param !== 'object') param = {}\n\n      /**\n       前端通过api.requ('http://www.xxx.com/api')获取外部远程数据\n       http://www.xxx.com/api部分会被存在parma._redirect的key值中\n       api会自动转成 'redirect'\n       ajax的方法(post/get)，通过param参数传入，key值名为ajaxtype，这个等同于jq的名字\n      */\n      if (api.indexOf('redirect')===0){\n        url = param._redirect;\n        delete param._redirect\n        if (param.ajaxtype){\n          method = param.ajaxtype\n          delete param.ajaxtype\n        }\n        if (param && param.method) {\n          method = param.method\n          delete param.method\n        }\n        let len = Object.keys(param)\n        if (len.length===0) param = {}\n      }\n\n      else if (api.indexOf('http')===0) {\n        this.fetchRemote = true\n        method = 'get'\n        url = api\n      }\n\n      else {\n        // url = this.apilist.list[api]\n        url = getMyApi(api, this.apilist.list)\n        if( !url ) return [null, null]\n      }\n\n      let query=undefined\n      method = method.toLowerCase();\n      if (method==='get')  query = {json: param}\n      if (method==='post') query = {json: param}\n      return [url, query]\n    },\n\n    getApi: function(api){\n      return getMyApi(api, this.apilist.list)\n    },\n\n    setApi: function(api_collect){\n      this.apilist.list = api_collect || {}\n    },\n\n    appendApi: function(api_collect){\n      this.apilist.list = _.merge({}, this.apilist.list, api_collect)\n    },\n\n    get: async function(api, param){\n      // let [_api, _param] = this._parseClientForm(api, param, 'get')\n      // if (!_api) return {error: \"60001\", message: \"指定api不存在\"}\n      // if (_param && _param.json && _param.json.test && _param.json.test == '123') delete _param.json.test\n      // if (_param && _param.json && _param.json._stat_ ) delete _param.json._stat_\n      // DEBUG('get param %O', _param)\n      // let _data = await this._get(_api, _param)\n      // return {data: _data}\n      \n      try {\n        let [_api, _param] = this._parseClientForm(api, param, 'get')\n        if (_api) {\n          if (_param && _param.json && _param.json.test && _param.json.test == '123') delete _param.json.test\n          if (_param && _param.json && _param.json._stat_ ) delete _param.json._stat_\n          let _data = await this._get(_api, _param)\n          return {data: _data}\n        } else {\n          throw new Error(JSON.stringify({\n            error: \"60001\", \n            message: \"指定api不存在\",\n            api: '/api/'+api,\n            param: param\n          }))\n        }\n      } catch (error) {\n        throw new Error(JSON.stringify({\n          error: \"60002\",\n          message: \"后端返回数据错误\",\n          info: error.message,\n          api: '/api/' + api,\n          param: param\n        }))\n      }\n    },\n\n    post: async function(api, param){\n      // let [_api, _param] = this._parseClientForm(api, param, 'post')\n      // if (!_api) return {error: \"60001\", message: \"指定api不存在\"}\n      // if (_param && _param.form && _param.form.test && _param.form.test == '123') delete _param.form.test\n      // DEBUG('post param %O', _param)\n      // let _data = await this._post(_api, _param)\n      // return {data: _data}\n      try {\n        let [_api, _param] = this._parseClientForm(api, param, 'get')\n        if (_api) {\n          if (_param && _param.form && _param.form.test && _param.form.test == '123') delete _param.form.test\n          let _data = await this._post(_api, _param)\n          return {data: _data}\n        } else {\n          throw new Error(JSON.stringify({\n            error: \"60001\", \n            message: \"指定api不存在\",\n            api: '/api/'+api,\n            param: param\n          }))\n        }\n      } catch (error) {\n        throw new Error(JSON.stringify({\n          error: \"60002\",\n          message: \"后端返回数据错误\",\n          info: error.message,\n          api: '/api/' + api,\n          param: param\n        }))\n      }\n    }\n  }\n}\n"]}