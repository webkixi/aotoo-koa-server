{"version":3,"sources":["fkpcore/modules/fetch/pullapi.js"],"names":["DEBUG","debug","module","exports","_parseClientForm","api","param","method","url","undefined","fetchRemote","message","indexOf","_redirect","ajaxtype","len","length","apilist","list","query","toLowerCase","json","get","_api","_param","error","test","_stat_","_get","_data","data","post","form","_post"],"mappings":"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","file":"../../../../fkpcore/modules/fetch/pullapi.js","sourcesContent":["import path from 'path'\nimport {stringify} from 'querystring'\nconst DEBUG = debug('fkp:modules:pullapi')\n\nmodule.exports = function(){\n  return {\n    _parseClientForm: function(api, param={}, method='get'){\n      let url = undefined\n      this.fetchRemote = false\n      // if(objtypeof(param)!=='object') return [null, { message: 'pullApiData === 请指定正确的参数'}]\n      if(!api) return [null, { message: 'pullApiData === 请指定正确的参数'}]\n      if(typeof param !== 'object') param = {}\n\n      /**\n       前端通过api.requ('http://www.xxx.com/api')获取外部远程数据\n       http://www.xxx.com/api部分会被存在parma._redirect的key值中\n       api会自动转成 'redirect'\n       ajax的方法(post/get)，通过param参数传入，key值名为ajaxtype，这个等同于jq的名字\n      */\n      if (api.indexOf('redirect')===0){\n        url = param._redirect;\n        delete param._redirect\n        if (param.ajaxtype){\n          method = param.ajaxtype\n          delete param.ajaxtype\n        }\n        if (param && param.method) {\n          method = param.method\n          delete param.method\n        }\n        let len = Object.keys(param)\n        if (len.length===0) param = {}\n      }\n\n      else if (api.indexOf('http')===0) {\n        this.fetchRemote = true\n        method = 'get'\n        url = api\n      }\n\n      else {\n        url = this.apilist.list[api]\n        if( !url ) return [null, null]\n      }\n\n      let query=undefined\n      method = method.toLowerCase();\n      if (method==='get')  query = {json: param}\n      if (method==='post') query = {json: param}\n      return [url, query]\n    },\n\n    get: async function(api, param){\n      DEBUG('get api %s', api)\n      let [_api, _param] = this._parseClientForm(api, param, 'get')\n      if (!_api) return {error: \"60001\", message: \"指定api不存在\"}\n      if (_param && _param.json && _param.json.test && _param.json.test == '123') delete _param.json.test\n      if (_param && _param.json && _param.json._stat_ ) delete _param.json._stat_\n      DEBUG('get param %O', _param)\n      let _data = await this._get(_api, _param)\n      return {data: _data}\n    },\n\n    post: async function(api, param){\n      DEBUG('post api %s', api)\n      let [_api, _param] = this._parseClientForm(api, param, 'post')\n      if (!_api) return {error: \"60001\", message: \"指定api不存在\"}\n      if (_param && _param.form && _param.form.test && _param.form.test == '123') delete _param.form.test\n      DEBUG('post param %O', _param)\n      let _data = await this._post(_api, _param)\n      return {data: _data}\n    }\n  }\n}\n"]}