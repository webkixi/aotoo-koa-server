{"version":3,"sources":["fkpcore/modules/wsocket.js"],"names":["http","require","socket_config","io","sio","Server","of","path","run","websocket","app","scfg","srv","createServer","callback","wspush","name","msg","emit","wson","cb","wsuse","use","on","mkmkon","skt","client","handshake","data","call","mkon","_keys","map","item","i","_cb","socket","console","log","module","exports","init"],"mappings":";;;;;;;;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AAAA,IACEC,gBAAgB,EADlB;AAAA,IAEEC,EAFF;AAAA,IAGEC,GAHF;AAAA,IAIEC,SAASJ,QAAQ,WAAR,CAJX;;AAMA,SAASK,EAAT,CAAYC,IAAZ,EAAiB;AACf,MAAIJ,EAAJ,EAAO;AACLA,OAAGG,EAAH,CAAMC,IAAN;AACAC;AACD;AACF;;AAED,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AACrB,MAAIC,OAAOT,aAAX;AACA,MAAIU,MAAMZ,KAAKa,YAAL,CAAkBH,IAAII,QAAJ,EAAlB,CAAV;AACAX,OAAK,IAAIE,MAAJ,CAAWO,GAAX,CAAL;;AAEA;AACA,WAASG,MAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA0B;AACzBd,OAAGe,IAAH,CAAQF,IAAR,EAAcC,GAAd;AACA;;AAED,WAASE,IAAT,CAAcH,IAAd,EAAoBI,EAApB,EAAuB;AAAG;AACxB,QAAIT,KAAKK,IAAL,CAAJ,EAAgB;AAChBL,SAAKK,IAAL,IAAaI,EAAb;AACD;;AAED,WAASC,KAAT,CAAeD,EAAf,EAAkB;AAChB,QAAIjB,EAAJ,EAAQ,OAAOA,GAAGmB,GAAH,CAAOF,EAAP,CAAP;AACT;;AAEDhB,QAAM;AACJmB,QAAIJ,IADA;AAEJb,QAAIA,EAFA;AAGJY,UAAMH,MAHF;AAIJO,SAAKD;AAJD,GAAN;;AAOA,SAAOT,GAAP;AACD;;AAED,SAASJ,GAAT,GAAc;AACZ,WAASgB,MAAT,CAAgBJ,EAAhB,EAAoBK,GAApB,EAAwB;AACtB,QAAMC,SAASD,IAAIE,SAAnB;AACA,WAAO,UAASC,IAAT,EAAc;AACnBR,SAAGS,IAAH,CAAQ,EAAC1B,IAAIA,EAAL,EAAR,EAAkByB,IAAlB,EAAwBH,GAAxB,EAA6BC,MAA7B;AACD,KAFD;AAGD;;AAED,WAASI,IAAT,CAAcL,GAAd,EAAkB;AAChB,QAAId,OAAOT,aAAX;AACA,QAAI6B,QAAQ,oBAAYpB,IAAZ,CAAZ;AACAoB,UAAMC,GAAN,CAAU,UAASC,IAAT,EAAeC,CAAf,EAAiB;AACzB,UAAIC,MAAMX,OAAOb,KAAKsB,IAAL,CAAP,EAAmBR,GAAnB,CAAV;AACAA,UAAIF,EAAJ,CAAOU,IAAP,EAAaE,GAAb;AACD,KAHD;AAID;AACD,MAAIhC,EAAJ,EAAO;AACLA,OAAGoB,EAAH,CAAM,YAAN,EAAoB,UAASa,MAAT,EAAgB;AAClCN,WAAKM,MAAL;;AAEA;AACA;AACA;;AAEAA,aAAOb,EAAP,CAAU,YAAV,EAAwB,YAAU;AAChCc,gBAAQC,GAAR,CAAY,iBAAZ;AACD,OAFD;AAGD,KAVD;AAWD;AACF;;AAEDC,OAAOC,OAAP,GAAiB;AACfC,QAAMhC,SADS;AAEfH,MAAIA,EAFW;AAGfE,OAAKA,GAHU;AAIfJ,OAAKA;AAJU,CAAjB","file":"../../../fkpcore/modules/wsocket.js","sourcesContent":["var http = require('http'),\n  socket_config = {},\n  io,\n  sio,\n  Server = require('socket.io');\n\nfunction of(path){\n  if (io){\n    io.of(path)\n    run()\n  }\n}\n\nfunction websocket(app){\n  var scfg = socket_config;\n  var srv = http.createServer(app.callback());\n  io = new Server(srv);\n\n  // websocket emit something\n  function wspush(name, msg){\n  \tio.emit(name, msg);\n  }\n\n  function wson(name, cb){  // cb is function and cb.length = 3 / cb({Json}, skt{SOCKET}, client{Json})\n    if (scfg[name]) return;\n    scfg[name] = cb;\n  }\n\n  function wsuse(cb){\n    if (io) return io.use(cb)\n  }\n\n  sio = {\n    on: wson,\n    of: of,\n    emit: wspush,\n    use: wsuse,\n  }\n\n  return srv;\n}\n\nfunction run(){\n  function mkmkon(cb, skt){\n    const client = skt.handshake\n    return function(data){\n      cb.call({io: io}, data, skt, client)\n    }\n  }\n\n  function mkon(skt){\n    var scfg = socket_config;\n    var _keys = Object.keys(scfg)\n    _keys.map(function(item, i){\n      var _cb = mkmkon(scfg[item], skt)\n      skt.on(item, _cb)\n    })\n  }\n  if (io){\n    io.on('connection', function(socket){\n      mkon(socket);\n\n      // socket.on('imchat', function(data){\n      //     io.emit('imchat', {data: { user: 'world',message:'ni mei' }});\n      // })\n\n      socket.on('disconnect', function(){\n        console.log('user disconnect');\n      })\n    })\n  }\n}\n\nmodule.exports = {\n  init: websocket,\n  of: of,\n  run: run,\n  sio: sio\n}\n"]}