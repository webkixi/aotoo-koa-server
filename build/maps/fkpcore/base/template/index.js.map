{"version":3,"sources":["fkpcore/base/template/index.js"],"names":["fkp","index","raw","data","type","tempSet","evaluate","interpolate","escape","_","templateSettings","compiled","template"],"mappings":";;;;;;kBAyBe,UAASA,GAAT,EAAa;AAC1B,SAAOC,KAAP;AACD,C;;AA3BD,SAASA,KAAT,CAAeD,GAAf,EAAoBE,GAApB,EAAwC;AAAA,MAAfC,IAAe,uEAAV,EAAU;AAAA,MAANC,IAAM;;AACtC,MAAIF,GAAJ,EAAS;AACP,QAAMG,UAAU;AACd,SAAG;AACDC,kBAAa,iBADZ;AAEDC,qBAAa,kBAFZ;AAGDC,gBAAa;AAHZ,OADW;;AAOd,SAAG;AACDF,kBAAa,mBADZ;AAEDC,qBAAa,oBAFZ;AAGDC,gBAAa;AAHZ;AAPW,KAAhB;;AAcA,QAAI,OAAOJ,IAAP,IAAe,QAAnB,EAA6B;AAC3BK,QAAEC,gBAAF,GAAqBL,QAAQD,IAAR,CAArB;AACD;;AAED,QAAMO,WAAWF,EAAEG,QAAF,CAAWV,GAAX,CAAjB;AACA,WAAOS,SAASR,IAAT,CAAP;AACD;AACF","file":"../../../../fkpcore/base/template/index.js","sourcesContent":["function index(fkp, raw, data={}, type) {\n  if (raw) {\n    const tempSet = {\n      1: {\n        evaluate:    /{{([\\s\\S]+?)}}/g,\n        interpolate: /{{=([\\s\\S]+?)}}/g,\n        escape:      /{{-([\\s\\S]+?)}}/g\n      },\n\n      2: {\n        evaluate:    /{{{([\\s\\S]+?)}}}/g,\n        interpolate: /{{{=([\\s\\S]+?)}}}/g,\n        escape:      /{{{-([\\s\\S]+?)}}}/g\n      }\n    }\n\n    if (typeof type == 'number') {\n      _.templateSettings = tempSet[type]\n    }\n\n    const compiled = _.template(raw)\n    return compiled(data)\n  }\n}\n\nexport default function(fkp){\n  return index\n}\n"]}