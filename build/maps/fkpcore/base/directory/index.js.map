{"version":3,"sources":["fkpcore/base/directory/index.js"],"names":["fkp","dir","existSync","folderInfo","debug","message","index","_dir","tree","loopDir","$dir","parent","sync","forEach","stat","statSync","item","obj","parse","isFile","feather","title","name","path","url","push","isDirectory","parentId","_","uniqueId","dirFeather","idf"],"mappings":";;;;;;;uDA4CA,iBAAqBA,GAArB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAEQ,aAAGC,SAAH,CAAaD,GAAb,CAFR;AAAA;AAAA;AAAA;;AAAA,6CAGaE,WAAWF,GAAX,CAHb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMIG,kBAAM,eAAe,YAAEC,OAAvB;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,K;;;;;kBAUA,UAASN,GAAT,EAAa;AAC1B,SAAOM,KAAP;AACD,C;;AAxDD;;;;AACA;;;;AACA;;;;;;;;AAEA,SAASH,UAAT,CAAoBI,IAApB,EAAyB;AACvB,MAAIC,OAAO,EAAX;AACA,WAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA8B;AAC5BD,WAAOA,OAAK,IAAZ;AACA,mBAAKE,IAAL,CAAUF,IAAV,EAAgBG,OAAhB,CAAyB,gBAAQ;AAC/B,UAAMC,OAAO,aAAGC,QAAH,CAAYC,IAAZ,CAAb;AACA,UAAMC,MAAO,eAAKC,KAAL,CAAWF,IAAX,CAAb;AACA,UAAIF,KAAKK,MAAL,EAAJ,EAAmB;AACjB,YAAIC,UAAU;AACZC,iBAAOJ,IAAIK,IADC;AAEZC,gBAAMP,IAFM;AAGZQ,eAAKP,IAAIK;AAHG,SAAd;AAKA,YAAIX,MAAJ,EAAY;AACVS,kBAAQT,MAAR,GAAiBA,MAAjB;AACD;AACDH,aAAKiB,IAAL,CAAUL,OAAV;AACD;;AAED,UAAIN,KAAKY,WAAL,EAAJ,EAAwB;AACtB,YAAMC,WAAWC,EAAEC,QAAF,CAAWZ,IAAIK,IAAJ,GAAS,GAApB,CAAjB;AACA,YAAIQ,aAAa;AACfT,iBAAOJ,IAAIK,IADI;AAEfC,gBAAMP,IAFS;AAGfQ,eAAKP,IAAIK,IAHM;AAIfS,eAAKJ;AAJU,SAAjB;AAMA,YAAIhB,MAAJ,EAAY;AACVmB,qBAAWnB,MAAX,GAAoBA,MAApB;AACD;AACDH,aAAKiB,IAAL,CAAUK,UAAV;AACArB,gBAAQO,IAAR,EAAcW,QAAd;AACD;AACF,KA7BD;AA8BD;;AAEDlB,UAAQF,IAAR;AACA,SAAO,EAAEC,UAAF,EAAP;AACD","file":"../../../../fkpcore/base/directory/index.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport glob from 'glob'\n\nfunction folderInfo(_dir){\n  let tree = []\n  function loopDir($dir, parent){\n    $dir = $dir+'/*'\n    glob.sync($dir).forEach( item => {\n      const stat = fs.statSync(item) \n      const obj  = path.parse(item)\n      if (stat.isFile()) {\n        let feather = {\n          title: obj.name,\n          path: item,\n          url: obj.name\n        }\n        if (parent) {\n          feather.parent = parent\n        }\n        tree.push(feather)\n      }\n\n      if (stat.isDirectory()) {\n        const parentId = _.uniqueId(obj.name+'_')\n        let dirFeather = {\n          title: obj.name,\n          path: item,\n          url: obj.name,\n          idf: parentId\n        }\n        if (parent) {\n          dirFeather.parent = parent\n        }\n        tree.push(dirFeather)\n        loopDir(item, parentId)\n      }\n    })\n  }\n  \n  loopDir(_dir)\n  return { tree }\n}\n\nasync function index(fkp, dir){\n  try {\n    if (fs.existSync(dir)) {\n      return folderInfo(dir)\n    }\n  } catch (e) {\n    debug('parsedir: ' + e.message)\n  }\n}\n\nexport default function(fkp){\n  return index\n}\n"]}