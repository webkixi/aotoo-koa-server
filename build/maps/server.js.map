{"version":3,"sources":["server.js"],"names":["app","keys","configs","call","server","on","err","ctx","console","error","_init","global","debug","require","aotooServer","opts","middlewares","index","pages","apis","mapper","pluginsFolder","state","views","bodyparser","midw","use","name","fn","plugins","utileHand","dist","files","dft","dynamic","buffer","gzip","_","merge","obj","map","html","extension","options","module","exports","e"],"mappings":"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","file":"../server.js","sourcesContent":["import Koa from 'koa'\nimport aotoo from 'aotoo-common'   // global.Aotoo\nimport views from 'koa-views'\nimport statics from 'koa-static-cache'\nimport bodyparser from 'koa-bodyparser'\nimport core, {fkp} from './fkpcore'\nglobal.debug = require('debug')\n\nconst app = new Koa()\n\nclass aotooServer {\n  constructor(opts){\n    this.middlewares = []\n    this.configs = {\n      keys: opts.keys||['agzgz gogogo'],\n      index: opts.index||'index',\n      pages: opts.pages,\n      apis: opts.apis||{},\n      mapper: opts.mapper||{},\n      pluginsFolder: opts.pluginsFolder\n    }\n    this.state = {\n      views: false,\n      bodyparser: false\n    }\n  }\n\n  async use(midw){\n    app.use(midw)\n  }\n\n  plugins(name, fn){\n    fkp.plugins(name, fn)\n  }\n\n  utile(name, fn) {\n    fkp.utileHand(name, fn)\n  }\n\n  async statics(dist, opts, files){\n    let dft = {\n      dynamic: false,\n      buffer: false,\n      gzip: false\n    }\n    if (opts) {\n      dft = _.merge(dft, opts)\n    }\n\n    app.use( statics(dist, dft, files) )\n  }\n\n  async apis(obj={}){\n    if (typeof obj == 'object') {\n      this.configs.apis = obj\n    }\n  }\n\n  async bodyparser(obj={}) {\n    if (typeof obj == 'object') {\n      this.state.bodyparser = true\n      app.use( bodyparser(obj) )\n    }\n  }\n\n  async views(dist, opts){\n    let dft = {\n      map: {\n        html: (opts&&opts.html||'ejs')\n      }\n    }\n    if (opts&&opts.extension) {\n      dft.extension = opts.extension\n    }\n    if (opts&&opts.options) {\n      dft.options = opts.options\n    }\n    this.state.views = true\n    app.use( views(dist, dft) )\n  }\n\n  async init(){\n    try {\n      if (!this.state.views) {\n        throw '必须指定模板引擎的views目录'\n      }\n      if (!this.state.bodyparser) {\n        app.use( bodyparser() )\n      }\n      return await _init.call(this)\n      \n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n\nasync function _init() {\n  app.keys = this.configs.keys\n  const server = await core.call(this, app, this.configs)\n\tapp.on('error', async (err, ctx) => {\n\t\tconsole.error('server error', err, ctx)\n\t})\n\n  return server\n}\n\nmodule.exports = function(opts){\n  try {\n    if (!opts.pages) throw '必须指定 pages 目录选项, pages目录放置control层文件'\n    return new aotooServer(opts)\n  } catch (e) {\n    console.error(e);\n  } \n}\n"]}