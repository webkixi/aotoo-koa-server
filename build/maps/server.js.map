{"version":3,"sources":["server.js"],"names":["that","myStore","append","entry","app","keys","configs","call","server","on","err","ctx","console","error","_init","SAX","aotooServer","opts","middlewares","theApis","list","apis","index","mapper","js","css","fetchOptions","cacheOptions","root","pages","pagesFolder","controls","pluginsFolder","state","views","bodyparser","global","Fetch","fetch","Cache","cache","_public","public","Aotoo","inject","midw","use","name","fn","plugins","utileHand","callback","arguments","dist","files","dft","dynamic","buffer","gzip","_","merge","obj","extname","debug","process","env","NODE_ENV","existsSync","distState","statSync","isDirectory","sync","forEach","item","push","viewsRoot","port","dom","cb","init","listen","module","exports","e"],"mappings":"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","file":"../server.js","sourcesContent":["import fs from \"fs\";\nimport glob from \"glob\";\nimport md5 from \"blueimp-md5\";\nimport Koa from 'koa'\nimport aotoo from 'aotoo-common'   // global.Aotoo\nimport render from 'koa-art-template'\nimport statics from 'koa-static-cache'\nimport bodyparser from 'koa-bodyparser'\nimport core, { fkp } from './fkpcore'\nimport fetch from './fkpcore/modules/fetch'\nimport cache from './fkpcore/modules/cache'\n\nconst myStore = SAX('AOTOO-KOA-SERVER')\n\nconst app = new Koa()\n\nclass aotooServer {\n  constructor(opts = {}) {\n    this.middlewares = []\n\n    let theApis = {\n      list: opts.apis || {}\n    }\n\n    this.configs = {\n      keys: opts.keys || ['aotoo koa'],    // cookie session关键字\n      index: opts.index || 'index',        // 默认首页\n\n      apis: theApis,                      // api接口集合\n      mapper: opts.mapper || { js: {}, css: {} },  // 静态资源映射文件\n\n      fetchOptions: opts.fetchOptions || {},\n      cacheOptions: opts.cacheOptions || {},\n\n      root: opts.root,              // 渲染默认目录\n      pages: opts.pages||opts.pagesFolder||opts.controls,        // control层文件夹，必须\n      pluginsFolder: opts.pluginsFolder   // 插件文件夹\n    }\n\n    this.state = {\n      views: false,\n      bodyparser: false\n    }\n\n    // 传入apis\n    global.Fetch = this.fetch = fetch({ apis: this.configs.apis, ...this.fetchOptions});\n    global.Cache = this.cache = cache(this.cacheOptions)\n\n    if (this.configs.mapper) {\n      let _public\n      let mapper = this.configs.mapper\n      if (mapper.public) {\n        _public = mapper.public\n        // delete mapper.public\n      }\n      if (_public) {\n        Aotoo.inject.public = _public\n      }\n      Aotoo.inject.mapper = mapper\n    }\n  }\n\n  public(opts) {\n    Aotoo.inject.public = opts\n  }\n\n  // 注册KOA2的中间间，与KOA2语法保持一致\n  async use(midw) {\n    app.use(midw)\n  }\n\n  // 注册一个Aotoo插件方法\n  plugins(name, fn) {\n    fkp.plugins(name, fn)\n  }\n\n  // 注册一个Aotoo助手方法\n  utile(name, fn) {\n    fkp.utileHand(name, fn)\n  }\n\n  callback() {\n    return app.callback(arguments)\n  }\n\n  // 指定站点静态路径，如 /images, /uploader, /user\n  async statics(dist, opts, files) {\n    let dft = {\n      dynamic: false,\n      buffer: false,\n      gzip: false\n    }\n    if (opts) {\n      dft = _.merge(dft, opts)\n    }\n\n    app.use(statics(dist, dft, files))\n  }\n\n  // 注册api接口集，用于做接口层的数据访问\n  async apis(obj = {}) {\n    if (typeof obj == 'object') {\n      this.configs.apis = obj\n    }\n  }\n\n\n  // 注册POST中间件，可以通过 ctx.bodys来访问post数据\n  async bodyparser(obj = {}) {\n    if (typeof obj == 'object') {\n      this.state.bodyparser = true\n      app.use(bodyparser(obj))\n    }\n  }\n\n\n  // 注册渲染方法\n  async views(dist, opts) {\n    // import views from 'koa-views'   // 放到顶部\n    // let dft = {\n    //   map: {\n    //     html: (opts&&opts.html||'ejs')\n    //   }\n    // }\n    // if (opts&&opts.extension) {\n    //   dft.extension = opts.extension\n    // }\n    // if (opts&&opts.options) {\n    //   dft.options = opts.options\n    // }\n    // this.state.views = true\n    // app.use( views(dist, dft) )\n\n    let dft = {\n      root: dist,\n      extname: '.html',\n      debug: process.env.NODE_ENV !== 'production'\n    }\n    dft = _.merge({}, dft, opts)\n\n    if (dist) {\n      let views = []\n      if (fs.existsSync(dist)) {\n        const distState = fs.statSync(dist)\n        if (distState.isDirectory()) {\n          glob.sync(dist + '/**/*.html').forEach(function (item) {\n            views.push(item)\n          })\n          this.state.viewsRoot = dist\n        }\n      }\n      this.state.views = views\n    }\n    render(app, dft)\n  }\n\n\n  // 初始化\n  async init() {\n    try {\n      if (!this.configs.pages) {\n        throw '必须指定control目录'\n      }\n      if (!this.state.views) {\n        if (!this.configs.root) {\n          throw '必须指定模板引擎的views目录'\n        } else {\n          this.views(this.configs.root)\n        }\n      }\n      if (!this.state.bodyparser) {\n        app.use(bodyparser())\n      }\n      return await _init.call(this)\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async listen(port, dom, cb) {\n    const server = await this.init()\n    server.listen(port, dom, cb)\n  }\n}\n\n\nasync function _init() {\n  const that = this\n  myStore.append({\n    entry: that\n  })\n  app.keys = this.configs.keys\n  const server = await core.call(this, app, this.configs)\n  app.on('error', async (err, ctx) => {\n    console.error('server error', err, ctx)\n  })\n\n  return server\n}\n\nmodule.exports = function (opts) {\n  try {\n    if (!opts.pages) throw '必须指定 pages 目录选项, pages目录放置control层文件'\n    return new aotooServer(opts)\n  } catch (e) {\n    console.error(e);\n  }\n}\n"]}